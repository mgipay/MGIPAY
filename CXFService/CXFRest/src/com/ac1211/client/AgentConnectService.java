package com.ac1211.client;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.3
 * 2013-02-18T19:16:49.052+05:30
 * Generated source version: 2.7.3
 * 
 */
@WebServiceClient(name = "AgentConnectService", 
                  wsdlLocation = "WEB-INF/WSDL/AgentConnect1211.wsdl",
                  targetNamespace = "http://www.moneygram.com/AgentConnect1211") 
public class AgentConnectService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.moneygram.com/AgentConnect1211", "AgentConnectService");
    public final static QName AgentConnect = new QName("http://www.moneygram.com/AgentConnect1211", "AgentConnect");
    static {
        URL url = AgentConnectService.class.getResource("AgentConnect1211.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(AgentConnectService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "AgentConnect1211.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public AgentConnectService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AgentConnectService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AgentConnectService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns AgentConnect
     */
    @WebEndpoint(name = "AgentConnect")
    public AgentConnect getAgentConnect() {
        return super.getPort(AgentConnect, AgentConnect.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns AgentConnect
     */
    @WebEndpoint(name = "AgentConnect")
    public AgentConnect getAgentConnect(WebServiceFeature... features) {
        return super.getPort(AgentConnect, AgentConnect.class, features);
    }

}
