package com.sdk.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.7.4
 * 2013-04-18T16:51:59.347-04:00
 * Generated source version: 2.7.4
 * 
 */
@WebService(targetNamespace = "uri:ws.sdk.edialog.com", name = "eDialogWebServices")
@XmlSeeAlso({ObjectFactory.class})
public interface EDialogWebServices {

    /**
     * (Deprecated. GoodMail no longer exists.)
     * Returns e-mail headers for use in GoodMail. GoodMail provides a way to guarantee the delivery of a message to an inbox.
     * You can use the results of this function as the parameter to updateCellHeaders(). Introduced in e-Dialog Web Services 1.1.
     * 
     */
    @WebResult(name = "header", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "getGoodMailHeader", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.GetGoodMailHeader")
    @WebMethod
    @ResponseWrapper(localName = "getGoodMailHeaderResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.GetGoodMailHeaderResponse")
    public java.lang.String getGoodMailHeader(
        @WebParam(name = "transactional", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        boolean transactional
    );

    /**
     * Returns the status of an InsightBuilder job.
     * 				Introduced in e-Dialog Web Services 1.4.
     * 			
     */
    @WebResult(name = "state", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
    @RequestWrapper(localName = "getIBJobStatus", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com", className = "com.sdk.client.GetIBJobStatus")
    @WebMethod
    @ResponseWrapper(localName = "getIBJobStatusResponse", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com", className = "com.sdk.client.GetIBJobStatusResponse")
    public java.lang.String getIBJobStatus(
        @WebParam(name = "jobId", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        int jobId
    );

    /**
     * Sets the cookie lifetime for tracking customer activity on the client's website. Introduced in e-Dialog Web Services 1.1.
     */
    @RequestWrapper(localName = "updateCellConversionTracking", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellConversionTracking")
    @WebMethod
    @ResponseWrapper(localName = "updateCellConversionTrackingResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellConversionTrackingResponse")
    public void updateCellConversionTracking(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "cookieLifeTime", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String cookieLifeTime
    );

    /**
     * Returns a list/array of all available values for each of the five content object UDFs.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "udfValueList", targetNamespace = "uri:udf.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listContentUdfs", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListContentUdfs")
    @WebMethod
    @ResponseWrapper(localName = "listContentUdfsResponse", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListContentUdfsResponse")
    public java.util.List<com.sdk.client.UdfValueListType> listContentUdfs();

    /**
     * Creates a new audience, either membership or suppression,
     * based on the specified type, and using the specified class
     * identifier (which defines which member fields to include).
     * See listAudienceClasses.
     * Introduced in e-Dialog Web Services 1.0.
     * 
     */
    @WebResult(name = "resultAudienceId", targetNamespace = "uri:audience.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createAudience", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.CreateAudience")
    @WebMethod
    @ResponseWrapper(localName = "createAudienceResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.CreateAudienceResponse")
    public int createAudience(
        @WebParam(name = "audienceType", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String audienceType,
        @WebParam(name = "classId", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int classId,
        @WebParam(name = "singleUse", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        boolean singleUse,
        @WebParam(name = "name", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "udf", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf,
        @WebParam(name = "alternateKey", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String alternateKey
    );

    /**
     * Attempts to asynchronously mail a cell at a specified date/time.
     * If the status of the cell is Mailing, Merging, or Merged, you cannot send it.
     * Does not require that the cell has been proofed.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "sendCellLater", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendCellLater")
    @WebMethod
    @ResponseWrapper(localName = "sendCellLaterResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendCellLaterResponse")
    public void sendCellLater(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "scheduledDate", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar scheduledDate
    );

    /**
     * Attempts to asynchronously mail all cells in a mailing at the
     * time previously set for merging and mailing. Does not require
     * that the cells have been proofed.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @WebResult(name = "cells", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "sendMailingAsScheduled", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendMailingAsScheduled")
    @WebMethod
    @ResponseWrapper(localName = "sendMailingAsScheduledResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendMailingAsScheduledResponse")
    public java.util.List<java.lang.Integer> sendMailingAsScheduled(
        @WebParam(name = "mailingId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int mailingId
    );

    /**
     * (Deprecated. Use the service listMailingsByFilter)
     * Returns a list of mailings. Only a limited set of properties for each campaign are returned.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "mailingList", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listMailings", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.ListMailings")
    @WebMethod
    @ResponseWrapper(localName = "listMailingsResponse", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.ListMailingsResponse")
    public com.sdk.client.MailingListType listMailings(
        @WebParam(name = "filterCampaignId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> filterCampaignId,
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterCreateDateStart", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateStart,
        @WebParam(name = "filterCreateDateEnd", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateEnd,
        @WebParam(name = "filterFirstMailedDateStart", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateStart,
        @WebParam(name = "filterFirstMailedDateEnd", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateEnd,
        @WebParam(name = "filterStatus", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.String> filterStatus,
        @WebParam(name = "sortBy", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int pageNumber
    );

    /**
     * Lets you modify the target URL, report name, expiration date, enabled status, and UDF for the specified reportable link.
     * Introduced in e-Dialog Web Services 1.3.
     * 
     */
    @RequestWrapper(localName = "updateLink", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com", className = "com.sdk.client.UpdateLink")
    @WebMethod
    @ResponseWrapper(localName = "updateLinkResponse", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com", className = "com.sdk.client.UpdateLinkResponse")
    public void updateLink(
        @WebParam(name = "linkId", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        int linkId,
        @WebParam(name = "targetURL", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        java.lang.String targetURL,
        @WebParam(name = "reportName", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        java.lang.String reportName,
        @WebParam(name = "expirationDate", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar expirationDate,
        @WebParam(name = "enabled", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        java.lang.Boolean enabled,
        @WebParam(name = "udf", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf
    );

    /**
     * Returns the content object that has the specified alternative key. Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "contentItem", targetNamespace = "uri:content.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupContentByAlternateKey", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.LookupContentByAlternateKey")
    @WebMethod
    @ResponseWrapper(localName = "lookupContentByAlternateKeyResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.LookupContentByAlternateKeyResponse")
    public com.sdk.client.ContentItemType lookupContentByAlternateKey(
        @WebParam(name = "alternateKey", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String alternateKey
    );

    /**
     * Lets you set the date when the merger will occur and, separately,
     * when the cell will be sent.
     * If the merger is not complete by the date specified as the dropDate,
     * the cell is sent when the merger is complete.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "scheduleCell", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ScheduleCell")
    @WebMethod
    @ResponseWrapper(localName = "scheduleCellResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ScheduleCellResponse")
    public void scheduleCell(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "mergeDate", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar mergeDate,
        @WebParam(name = "dropDate", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar dropDate
    );

    /**
     * Creates a data upload configuration for an existing suppression list.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "dataUploadConfig", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createDataUploadConfigForExistingSuppression", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForExistingSuppression")
    @WebMethod
    @ResponseWrapper(localName = "createDataUploadConfigForExistingSuppressionResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForExistingSuppressionResponse")
    public com.sdk.client.DataUploadConfigType createDataUploadConfigForExistingSuppression(
        @WebParam(name = "audienceId", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        int audienceId,
        @WebParam(name = "appendToAudience", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        boolean appendToAudience,
        @WebParam(name = "emailNotification", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.util.List<java.lang.String> emailNotification
    );

    /**
     * Deletes a realtime messaging configuration.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @RequestWrapper(localName = "deleteRTMConfiguration", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.DeleteRTMConfiguration")
    @WebMethod
    @ResponseWrapper(localName = "deleteRTMConfigurationResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.DeleteRTMConfigurationResponse")
    public void deleteRTMConfiguration(
        @WebParam(name = "messageName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String messageName
    );

    /**
     * Returns a list of available eReports report types.
     * 				Introduced in e-Dialog Web Services 1.3.
     *         
     */
    @WebResult(name = "Reports", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listEReportTypes", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.ListEReportTypes")
    @WebMethod
    @ResponseWrapper(localName = "listEReportTypesResponse", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.ListEReportTypesResponse")
    public java.util.List<com.sdk.client.ReportType> listEReportTypes();

    /**
     * Lets you set the date when the merger will occur and, separately specify when the cells in the mailing will be sent.
     * If you schedule sending a mailing, all of the cells that are ready to mail are sent. If the merger is not completed
     * by the mail date, the mail is sent when the merger is complete.  During the merger, the cell status is Mailing.
     * You can pause and cancel a cell after the merge has started and before the mail is being sent.
     * If you do so, the cell status is Cancelled. Past dates are allowed for the merger.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @WebResult(name = "cells", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "scheduleMailing", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ScheduleMailing")
    @WebMethod
    @ResponseWrapper(localName = "scheduleMailingResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ScheduleMailingResponse")
    public java.util.List<java.lang.Integer> scheduleMailing(
        @WebParam(name = "mailingId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int mailingId,
        @WebParam(name = "mergeDate", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar mergeDate,
        @WebParam(name = "dropDate", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar dropDate
    );

    /**
     * Updates a grid that is stored as rows.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "updateGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.UpdateGrid")
    @WebMethod
    @ResponseWrapper(localName = "updateGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.UpdateGridResponse")
    public void updateGrid(
        @WebParam(name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        int gridId,
        @WebParam(name = "name", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "row", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.GridRowType> row
    );

    /**
     * Cancels further processing of a cell. A cell must be in the PAUSED, MAILING, PROOFING, MERGING, or MERGED state to be cancelled.
     * MERGING, MERGED status support added in e-Dialog Web Services 1.3.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @RequestWrapper(localName = "cancelCell", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.CancelCell")
    @WebMethod
    @ResponseWrapper(localName = "cancelCellResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.CancelCellResponse")
    public void cancelCell(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Promotes the test cell associated with a realtime messaging configuration (RTM) or
     * an RTM variation, making it the current cell. After you use this function, sendMessage() 
     * uses this cell when sending a realtime message.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @RequestWrapper(localName = "promoteRTMTestCell", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.PromoteRTMTestCell")
    @WebMethod
    @ResponseWrapper(localName = "promoteRTMTestCellResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.PromoteRTMTestCellResponse")
    public void promoteRTMTestCell(
        @WebParam(name = "messageName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String messageName,
        @WebParam(name = "variationKey", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String variationKey
    );

    /**
     * (Deprecated. Use the service retrieveMailingViewEReportsUdfs)
     * 				Retrieves eReports data for the specified mailing.
     * 				Note that for this function, the filtering conditions on mailing IDs
     * 				and
     * 				mailing names are ORed together and ANDed with UDFs and
     * 				cell
     * 				mailed date period specified.
     * 				For reports including rollups per cell,
     * 				for example, Mailing_Cell or
     * 				Mailing_Cell_Audience,
     * 				this method
     * 				returns all the cells of the mailing matching the search
     * 				criteria.
     * 				Even if only a single cell was mailed in the specified period for a
     * 				mailing,
     * 				all the cells of that mailing will be returned.
     * 				Introduced in
     * 				e-Dialog Web Services 1.3.
     *         
     */
    @WebResult(name = "mailingView", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
    @RequestWrapper(localName = "retrieveMailingViewEReports", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrieveMailingViewEReports")
    @WebMethod
    @ResponseWrapper(localName = "retrieveMailingViewEReportsResponse", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrieveMailingViewEReportsResponse")
    public com.sdk.client.MailingViewEReports retrieveMailingViewEReports(
        @WebParam(name = "mailingIds", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> mailingIds,
        @WebParam(name = "names", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.String> names,
        @WebParam(name = "filterMailedDateStart", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterMailedDateStart,
        @WebParam(name = "filterMailedDateEnd", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterMailedDateEnd,
        @WebParam(name = "filterUdf", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.UDFFilterType> filterUdf,
        @WebParam(name = "reportType", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.lang.String reportType
    );

    /**
     * Updates the Lproof group with the list of CIDs.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @RequestWrapper(localName = "updateProofGroupSampleCIDs", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.UpdateProofGroupSampleCIDs")
    @WebMethod
    @ResponseWrapper(localName = "updateProofGroupSampleCIDsResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.UpdateProofGroupSampleCIDsResponse")
    public void updateProofGroupSampleCIDs(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "groupNumber", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int groupNumber,
        @WebParam(name = "arrayofCIDs", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> arrayofCIDs
    );

    /**
     * Sets the entire symbol map using a JSON data structure. See the
     * Developer's Guide for a description.
     * Throws an exception if any of the symbol names in the symbolMap
     * are illegal or if any of the symbol definitions are invalid.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "setSymbolMap", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.SetSymbolMap")
    @WebMethod
    @ResponseWrapper(localName = "setSymbolMapResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.SetSymbolMapResponse")
    public void setSymbolMap(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "symbolMap", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String symbolMap
    );

    /**
     * Returns mailing volume information over a specified date range.
     * The report can be broken down by domain, cell (identifier), or time (day or hour) or
     * some combination of these dimensions. Valid dimensions include CELLID, DOMAIN, TIME.
     * For CELLID, you can use a cell identifier to limit the result to the specified cell.
     * For DOMAIN, you can use a domain name (e.g., example.com) to limit the results to mail
     * sent to the specified domain. Use '***OTHER***' for domains not tracked.
     * For TIME, use HOUR or H to obtain volume broken down per hour; use DAY or D to obtain 
     * volume broken down per day. The response will be broken down per day if you do not
     * specify a value for this dimension.
     * 		    Valid start and end date are required. Null is reserved for the future. 
     * 	            Introduced in e-Dialog Web Services 1.4.
     *            
     */
    @RequestWrapper(localName = "getMailingVolumeReport", targetNamespace = "uri:deliverability.ws.sdk.edialog.com", className = "com.sdk.client.GetMailingVolumeReport")
    @WebMethod
    @ResponseWrapper(localName = "getMailingVolumeReportResponse", targetNamespace = "uri:deliverability.ws.sdk.edialog.com", className = "com.sdk.client.GetMailingVolumeReportResponse")
    public void getMailingVolumeReport(
        @WebParam(name = "startDate", targetNamespace = "uri:common.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "uri:common.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar endDate,
        @WebParam(mode = WebParam.Mode.INOUT, name = "dimension", targetNamespace = "uri:common.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> dimension,
        @WebParam(mode = WebParam.Mode.OUT, name = "record", targetNamespace = "uri:common.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.RecordType>> record
    );

    /**
     * Returns a list/array of all available values for each of the ten cell UDFs.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "udfValueList", targetNamespace = "uri:udf.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listCellUdfs", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListCellUdfs")
    @WebMethod
    @ResponseWrapper(localName = "listCellUdfsResponse", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListCellUdfsResponse")
    public java.util.List<com.sdk.client.UdfValueListType> listCellUdfs();

    /**
     * Tries to start an export job for the specified cell.
     * 				The call fails if there is an existing export job running from the same
     * 				cell.
     * 				The call also fails if there are no audiences associated with the cell.
     * 				Introduced in e-Dialog Web Services 1.0.
     *         
     */
    @RequestWrapper(localName = "startExportJob", targetNamespace = "uri:exporter.ws.sdk.edialog.com", className = "com.sdk.client.StartExportJob")
    @WebMethod
    @ResponseWrapper(localName = "startExportJobResponse", targetNamespace = "uri:exporter.ws.sdk.edialog.com", className = "com.sdk.client.StartExportJobResponse")
    public void startExportJob(
        @WebParam(name = "cellId", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Creates a grid for use in content, Each column of the grid represents a symbol. Each row contains string values to merge into the content. The first column of the grid contains key values used to determine the content to merge for each recipient.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @WebResult(name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.CreateGrid")
    @WebMethod
    @ResponseWrapper(localName = "createGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.CreateGridResponse")
    public int createGrid(
        @WebParam(name = "name", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "row", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.GridRowType> row
    );

    /**
     * Creates a data upload configuration for an existing audience list ID.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "dataUploadConfig", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createDataUploadConfigForExistingAudience", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForExistingAudience")
    @WebMethod
    @ResponseWrapper(localName = "createDataUploadConfigForExistingAudienceResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForExistingAudienceResponse")
    public com.sdk.client.DataUploadConfigType createDataUploadConfigForExistingAudience(
        @WebParam(name = "audienceId", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        int audienceId,
        @WebParam(name = "appendToAudience", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        boolean appendToAudience,
        @WebParam(name = "emailNotification", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.util.List<java.lang.String> emailNotification
    );

    /**
     * Finds links in the string you provide and adds anchor tags (a href=) to them.
     * It does change content stored in the database.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "wrappedData", targetNamespace = "uri:content.ws.sdk.edialog.com")
    @RequestWrapper(localName = "wrapUrlsInText", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.WrapUrlsInText")
    @WebMethod
    @ResponseWrapper(localName = "wrapUrlsInTextResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.WrapUrlsInTextResponse")
    public java.lang.String wrapUrlsInText(
        @WebParam(name = "text", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String text
    );

    /**
     * Returns a list of campaigns, including the ID, name, creation date, and user-defined field values.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "campaignList", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listCampaigns", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.ListCampaigns")
    @WebMethod
    @ResponseWrapper(localName = "listCampaignsResponse", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.ListCampaignsResponse")
    public com.sdk.client.CampaignListType listCampaigns(
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterCreateDateStart", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateStart,
        @WebParam(name = "filterCreateDateEnd", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateEnd,
        @WebParam(name = "sortBy", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        int pageNumber
    );

    /**
     * Adds or updates recipient profile data and sends a proof message to a single recipient.
     * The recipient e-mail address can be substituted with a replacement address.
     * This function is intended for generating tests of messages to be sent via the sendMessage function.
     * Introduced in e-Dialog Web Services 1.2.
     * 
     */
    @WebResult(name = "UUID", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
    @RequestWrapper(localName = "sendProofMessage", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com", className = "com.sdk.client.SendProofMessage")
    @WebMethod
    @ResponseWrapper(localName = "sendProofMessageResponse", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com", className = "com.sdk.client.SendProofMessageResponse")
    public java.lang.String sendProofMessage(
        @WebParam(name = "messageName", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
        java.lang.String messageName,
        @WebParam(name = "replacementAddress", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
        java.util.List<java.lang.String> replacementAddress,
        @WebParam(name = "property", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.PropertyType> property
    );

    /**
     * Returns a  list of symbols found in a content object.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "symbols", targetNamespace = "uri:content.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listSymbolsInContent", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.ListSymbolsInContent")
    @WebMethod
    @ResponseWrapper(localName = "listSymbolsInContentResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.ListSymbolsInContentResponse")
    public java.util.List<java.lang.String> listSymbolsInContent(
        @WebParam(name = "contentId", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int contentId
    );

    /**
     * Sets the metering scheme to use when the cell is mailed. Introduced in e-Dialog Web Services 1.1.
     */
    @RequestWrapper(localName = "updateCellMetering", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellMetering")
    @WebMethod
    @ResponseWrapper(localName = "updateCellMeteringResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellMeteringResponse")
    public void updateCellMetering(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "meterName", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String meterName
    );

    /**
     * In addition to returning all the information in retrieveMailingViewEReports, also returns information about
     * 				10 UDFS for the mailing(s). Introduced in e-Dialog Web Services 1.4.2
     * 			
     */
    @WebResult(name = "mailingView", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
    @RequestWrapper(localName = "retrieveMailingViewEReportsUdfs", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrieveMailingViewEReportsUdfs")
    @WebMethod
    @ResponseWrapper(localName = "retrieveMailingViewEReportsUdfsResponse", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrieveMailingViewEReportsUdfsResponse")
    public com.sdk.client.MailingViewEReportsWithUdfType retrieveMailingViewEReportsUdfs(
        @WebParam(name = "mailingIds", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> mailingIds,
        @WebParam(name = "names", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.String> names,
        @WebParam(name = "filterMailedDateStart", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterMailedDateStart,
        @WebParam(name = "filterMailedDateEnd", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterMailedDateEnd,
        @WebParam(name = "filterUdf", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.UDFFilterType> filterUdf,
        @WebParam(name = "reportType", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.lang.String reportType
    );

    /**
     * Returns a list/array of all available values for each of the five campaign UDFs.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "udfValueList", targetNamespace = "uri:udf.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listCampaignUdfs", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListCampaignUdfs")
    @WebMethod
    @ResponseWrapper(localName = "listCampaignUdfsResponse", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListCampaignUdfsResponse")
    public java.util.List<com.sdk.client.UdfValueListType> listCampaignUdfs();

    /**
     * Returns a list of customer IDs that were used during the most recent build sample operation.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "cid", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listProofSampleCIDs", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ListProofSampleCIDs")
    @WebMethod
    @ResponseWrapper(localName = "listProofSampleCIDsResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ListProofSampleCIDsResponse")
    public java.util.List<java.lang.Integer> listProofSampleCIDs(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Returns a list of available web analytics vendors and their tokens. Introduced in e-Dialog Web Services 1.1.
     */
    @WebResult(name = "webAnalyticsToken", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listWebAnalyticsTokens", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListWebAnalyticsTokens")
    @WebMethod
    @ResponseWrapper(localName = "listWebAnalyticsTokensResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListWebAnalyticsTokensResponse")
    public java.util.List<com.sdk.client.WebAnalyticsTokenType> listWebAnalyticsTokens();

    /**
     * Creates a data upload configuration for a new suppression list based on a default Class ID 98.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "config", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createDataUploadConfigForNewSuppression", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForNewSuppression")
    @WebMethod
    @ResponseWrapper(localName = "createDataUploadConfigForNewSuppressionResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForNewSuppressionResponse")
    public com.sdk.client.DataUploadConfigType createDataUploadConfigForNewSuppression(
        @WebParam(name = "namePrefix", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.lang.String namePrefix,
        @WebParam(name = "udf", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf,
        @WebParam(name = "emailNotification", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.util.List<java.lang.String> emailNotification
    );

    /**
     * Attempts to asynchronously mail all unmailed cells in this mailing.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "cells", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "sendMailingNow", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendMailingNow")
    @WebMethod
    @ResponseWrapper(localName = "sendMailingNowResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendMailingNowResponse")
    public java.util.List<java.lang.Integer> sendMailingNow(
        @WebParam(name = "mailingId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int mailingId
    );

    /**
     * Returns a list of columns from the exported data file.
     * 				Introduced in e-Dialog Web Services 1.1.
     *         
     */
    @WebResult(name = "columnName", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listExportedDataColumns", targetNamespace = "uri:exporter.ws.sdk.edialog.com", className = "com.sdk.client.ListExportedDataColumns")
    @WebMethod
    @ResponseWrapper(localName = "listExportedDataColumnsResponse", targetNamespace = "uri:exporter.ws.sdk.edialog.com", className = "com.sdk.client.ListExportedDataColumnsResponse")
    public java.util.List<java.lang.String> listExportedDataColumns(
        @WebParam(name = "cellId", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Clones a mailing.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "resultMailingId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
    @RequestWrapper(localName = "cloneMailing", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.CloneMailing")
    @WebMethod
    @ResponseWrapper(localName = "cloneMailingResponse", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.CloneMailingResponse")
    public int cloneMailing(
        @WebParam(name = "mailingId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int mailingId,
        @WebParam(name = "campaignId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int campaignId,
        @WebParam(name = "deepCopy", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        boolean deepCopy
    );

    /**
     * Maps all the columns in a grid to symbols in the content.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "mapAllGridColumnsToSymbols", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapAllGridColumnsToSymbols")
    @WebMethod
    @ResponseWrapper(localName = "mapAllGridColumnsToSymbolsResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapAllGridColumnsToSymbolsResponse")
    public void mapAllGridColumnsToSymbols(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "gridId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int gridId,
        @WebParam(name = "keySymbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String keySymbolName
    );

    /**
     * Updates the date when a cell is scheduled to be sent. Introduced in e-Dialog Web Services 1.1.
     */
    @RequestWrapper(localName = "updateCellDropDate", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellDropDate")
    @WebMethod
    @ResponseWrapper(localName = "updateCellDropDateResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellDropDateResponse")
    public void updateCellDropDate(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "dropDate", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar dropDate
    );

    /**
     * Automatically maps all data column symbols in the cell to the corresponding columns in the master database.
     *             Data column symbols that do not have a corresponding column are blank in the resulting email.
     *             Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "resetSymbolMap", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ResetSymbolMap")
    @WebMethod
    @ResponseWrapper(localName = "resetSymbolMapResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ResetSymbolMapResponse")
    public void resetSymbolMap(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Returns the actual member count and updates the audience with the current total.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "memberCount", targetNamespace = "uri:audience.ws.sdk.edialog.com")
    @RequestWrapper(localName = "getMemberCount", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.GetMemberCount")
    @WebMethod
    @ResponseWrapper(localName = "getMemberCountResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.GetMemberCountResponse")
    public long getMemberCount(
        @WebParam(name = "audienceId", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int audienceId
    );

    /**
     * Get the status of the eReports refresh.
     * 				Introduced
     * 				in e-Dialog Web Services 1.3.
     *         
     */
    @RequestWrapper(localName = "getEReportsRefreshStatus", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.GetEReportsRefreshStatus")
    @WebMethod
    @ResponseWrapper(localName = "getEReportsRefreshStatusResponse", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.GetEReportsRefreshStatusResponse")
    public void getEReportsRefreshStatus(
        @WebParam(mode = WebParam.Mode.INOUT, name = "mailingId", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> mailingId,
        @WebParam(mode = WebParam.Mode.OUT, name = "name", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> name,
        @WebParam(mode = WebParam.Mode.OUT, name = "status", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> status,
        @WebParam(mode = WebParam.Mode.OUT, name = "scheduleDate", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> scheduleDate,
        @WebParam(mode = WebParam.Mode.OUT, name = "startDate", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> startDate,
        @WebParam(mode = WebParam.Mode.OUT, name = "endDate", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> endDate
    );

    /**
     * Retrieves complete information about an audience based on the ID.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "audience", targetNamespace = "uri:audience.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupAudienceById", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.LookupAudienceById")
    @WebMethod
    @ResponseWrapper(localName = "lookupAudienceByIdResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.LookupAudienceByIdResponse")
    public com.sdk.client.AudienceDetailType lookupAudienceById(
        @WebParam(name = "audienceId", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int audienceId
    );

    /**
     * Returns a list of available feeder queues.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "queueName", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listFeederQueues", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListFeederQueues")
    @WebMethod
    @ResponseWrapper(localName = "listFeederQueuesResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListFeederQueuesResponse")
    public java.util.List<java.lang.String> listFeederQueues();

    /**
     * Attempts to asynchronously mail all unmailed
     * cells in this mailing at a specified date/time.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "cells", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "sendMailingLater", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendMailingLater")
    @WebMethod
    @ResponseWrapper(localName = "sendMailingLaterResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendMailingLaterResponse")
    public java.util.List<java.lang.Integer> sendMailingLater(
        @WebParam(name = "mailingId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int mailingId,
        @WebParam(name = "scheduledDate", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar scheduledDate
    );

    /**
     * Retrieves complete information about an audience based on the a list of Audience IDs.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @WebResult(name = "audience", targetNamespace = "uri:audience.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupAudienceByIds", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.LookupAudienceByIds")
    @WebMethod
    @ResponseWrapper(localName = "lookupAudienceByIdsResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.LookupAudienceByIdsResponse")
    public java.util.List<com.sdk.client.AudienceDetailType> lookupAudienceByIds(
        @WebParam(name = "audienceId", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> audienceId
    );

    /**
     * Assigns the feeder configuration to a cell. Introduced in e-Dialog Web Services 1.1.
     */
    @RequestWrapper(localName = "updateCellFeederQueue", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellFeederQueue")
    @WebMethod
    @ResponseWrapper(localName = "updateCellFeederQueueResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellFeederQueueResponse")
    public void updateCellFeederQueue(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "feederQueueName", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String feederQueueName
    );

    /**
     * Deletes an audience.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "deleteAudience", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.DeleteAudience")
    @WebMethod
    @ResponseWrapper(localName = "deleteAudienceResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.DeleteAudienceResponse")
    public void deleteAudience(
        @WebParam(name = "audienceId", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int audienceId
    );

    /**
     * Maps a key value from the grid to symbols in the cell content.
     * The keySymbolName is not a symbol ( _SYMBOL__).
     * It is a key value from the grid.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "mapAllGridColumnsToSymbolsByKeyLiteral", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapAllGridColumnsToSymbolsByKeyLiteral")
    @WebMethod
    @ResponseWrapper(localName = "mapAllGridColumnsToSymbolsByKeyLiteralResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapAllGridColumnsToSymbolsByKeyLiteralResponse")
    public void mapAllGridColumnsToSymbolsByKeyLiteral(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "gridId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int gridId,
        @WebParam(name = "keySymbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String keySymbolName
    );

    /**
     * Updates a grid that is stored in tab-delimited format.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "updateTabSeparatedGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.UpdateTabSeparatedGrid")
    @WebMethod
    @ResponseWrapper(localName = "updateTabSeparatedGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.UpdateTabSeparatedGridResponse")
    public void updateTabSeparatedGrid(
        @WebParam(name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        int gridId,
        @WebParam(name = "name", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "tabSeparatedData", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String tabSeparatedData
    );

    /**
     * If an export job is running for the specified cell, cancels the export
     * 				job.
     * 				Introduced in e-Dialog Web Services 1.0.
     *         
     */
    @RequestWrapper(localName = "cancelExportJob", targetNamespace = "uri:exporter.ws.sdk.edialog.com", className = "com.sdk.client.CancelExportJob")
    @WebMethod
    @ResponseWrapper(localName = "cancelExportJobResponse", targetNamespace = "uri:exporter.ws.sdk.edialog.com", className = "com.sdk.client.CancelExportJobResponse")
    public void cancelExportJob(
        @WebParam(name = "cellId", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * (Deprecated. Use the service listAudiencesByFilter)
     *         		Lists the available audiences, using the specified filter settings. Does not list audiences that have a status of ARCHIVE, ARCHIVED, INACTIVE, or DELETED.
     *         		The filter* arguments are optional arguments used to filter the results. Dates in date ranges are inclusive.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "audienceList", targetNamespace = "uri:audience.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listAudiences", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.ListAudiences")
    @WebMethod
    @ResponseWrapper(localName = "listAudiencesResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.ListAudiencesResponse")
    public com.sdk.client.AudienceListType listAudiences(
        @WebParam(name = "filterType", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String filterType,
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterStartCreateDate", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterStartCreateDate,
        @WebParam(name = "filterEndCreateDate", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterEndCreateDate,
        @WebParam(name = "sortBy", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int pageNumber
    );

    /**
     * Retrieves an audience. Introduced in e-Dialog Web Services 1.2.
     */
    @RequestWrapper(localName = "downloadAudience", targetNamespace = "uri:audiencetransfer.ws.sdk.edialog.com", className = "com.sdk.client.DownloadAudience")
    @WebMethod
    @ResponseWrapper(localName = "downloadAudienceResponse", targetNamespace = "uri:audiencetransfer.ws.sdk.edialog.com", className = "com.sdk.client.DownloadAudienceResponse")
    public void downloadAudience(
        @WebParam(mode = WebParam.Mode.INOUT, name = "audienceId", targetNamespace = "uri:audiencetransfer.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> audienceId,
        @WebParam(name = "column", targetNamespace = "uri:audiencetransfer.ws.sdk.edialog.com")
        java.util.List<java.lang.String> column,
        @WebParam(name = "option", targetNamespace = "uri:audiencetransfer.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.OptionType> option,
        @WebParam(mode = WebParam.Mode.OUT, name = "property", targetNamespace = "uri:audiencetransfer.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.OptionType>> property,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceFile", targetNamespace = "uri:audiencetransfer.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.activation.DataHandler> audienceFile
    );

    /**
     * Returns a link that has the specified ID.
     * Introduced in e-Dialog Web Services 1.3.
     * 
     */
    @RequestWrapper(localName = "lookupLinkById", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com", className = "com.sdk.client.LookupLinkById")
    @WebMethod
    @ResponseWrapper(localName = "lookupLinkByIdResponse", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com", className = "com.sdk.client.LinkType")
    public void lookupLinkById(
        @WebParam(mode = WebParam.Mode.INOUT, name = "linkId", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> linkId,
        @WebParam(mode = WebParam.Mode.OUT, name = "contentId", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> contentId,
        @WebParam(mode = WebParam.Mode.OUT, name = "targetURL", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> targetURL,
        @WebParam(mode = WebParam.Mode.OUT, name = "originalTargetURL", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> originalTargetURL,
        @WebParam(mode = WebParam.Mode.OUT, name = "enabled", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Boolean> enabled,
        @WebParam(mode = WebParam.Mode.OUT, name = "udf", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> udf,
        @WebParam(mode = WebParam.Mode.OUT, name = "reportName", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> reportName,
        @WebParam(mode = WebParam.Mode.OUT, name = "expirationDate", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> expirationDate
    );

    /**
     * Creates a data upload configuration for a new audience list based on a defined Class ID.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "config", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createDataUploadConfigForNewAudience", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForNewAudience")
    @WebMethod
    @ResponseWrapper(localName = "createDataUploadConfigForNewAudienceResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForNewAudienceResponse")
    public com.sdk.client.DataUploadConfigType createDataUploadConfigForNewAudience(
        @WebParam(name = "classId", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        int classId,
        @WebParam(name = "namePrefix", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.lang.String namePrefix,
        @WebParam(name = "udf", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf,
        @WebParam(name = "emailNotification", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.util.List<java.lang.String> emailNotification
    );

    /**
     * Creates a grid for use in content, based on tab-delimited data. Each column of the grid represents a symbol. Each row contains string values to merge into the content. The first column of the grid contains key values used to determine the content to merge for each recipient.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @WebResult(name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createTabSeparatedGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.CreateTabSeparatedGrid")
    @WebMethod
    @ResponseWrapper(localName = "createTabSeparatedGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.CreateTabSeparatedGridResponse")
    public int createTabSeparatedGrid(
        @WebParam(name = "name", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "tabSeparatedData", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String tabSeparatedData
    );

    /**
     * Binds a cell ID to an unsub template ID and an unsub audience ID (optional).
     * The first unsub template available is used by default, and is
     * configured for global unsubscribe. e-Dialog recommends that you
     * modify these settings carefully. Verify that your unsubscribe
     * policies are in compliance with e-Dialog regulations.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "setCellUnsubRules", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.SetCellUnsubRules")
    @WebMethod
    @ResponseWrapper(localName = "setCellUnsubRulesResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.SetCellUnsubRulesResponse")
    public void setCellUnsubRules(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "unsubTemplate", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int unsubTemplate,
        @WebParam(name = "unsubAudience", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.Integer unsubAudience
    );

    /**
     * Looks for a mailing using the alternate (user-provided) key.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "mailing", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupMailingByAlternateKey", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.LookupMailingByAlternateKey")
    @WebMethod
    @ResponseWrapper(localName = "lookupMailingByAlternateKeyResponse", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.LookupMailingByAlternateKeyResponse")
    public com.sdk.client.MailingDetailType lookupMailingByAlternateKey(
        @WebParam(name = "mailingKey", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.lang.String mailingKey
    );

    /**
     * Returns mailing information for a specific EventType (Undeliverable, Unsubscribe, Spam) in a given date range.
     * 				The results are grouped based on the 'Dimension' filters passed in. Only 2 dimensions are allowed at a time. 
     * 				Some of the dimensions can take 'null' which means group by all possible values..
     * 				
     * 				The report can be broken down into different dimensions:
     * 					1. CELLID - Single cellI ID (123) or all cell IDs (null)
     * 					2. DOMAIN - Domain to which the mailing was sent/received. '***OTHER***' if the domain is not tracked.\
     * 					3. TIME - Group the results hourly (h) or daily (d). This cannot be 'null'
     * 					4. CATEGORY - Only valid for "Undeliverable" 
     * 					5. SOURCE - Only valid for "Undeliverable" and "Unsubscribe" events
     * 						"Undeliverables" can be by email (Undel_via_email) or by some other source (Undel).
     * 						"Unsubscribes" can be by email (unsub_via_email) or some other source (unsub)
     * 					6. UNDELTYPE - Only valid for "Undeliverables"
     * 						Valid values are 't' (temporary) and 'p' (permanent)
     * 				Valid start and end date are required. Null is reserved for the future. 
     * 				Introduced in e-Dialog Web Services 1.4.
     * 			
     */
    @RequestWrapper(localName = "getDeliverabilityReport", targetNamespace = "uri:deliverability.ws.sdk.edialog.com", className = "com.sdk.client.GetDeliverabilityReport")
    @WebMethod
    @ResponseWrapper(localName = "getDeliverabilityReportResponse", targetNamespace = "uri:deliverability.ws.sdk.edialog.com", className = "com.sdk.client.GetDeliverabilityReportResponse")
    public void getDeliverabilityReport(
        @WebParam(name = "startDate", targetNamespace = "uri:common.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar startDate,
        @WebParam(name = "endDate", targetNamespace = "uri:common.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar endDate,
        @WebParam(mode = WebParam.Mode.INOUT, name = "dimension", targetNamespace = "uri:common.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> dimension,
        @WebParam(name = "eventType", targetNamespace = "uri:deliverability.ws.sdk.edialog.com")
        java.lang.String eventType,
        @WebParam(mode = WebParam.Mode.OUT, name = "record", targetNamespace = "uri:common.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.RecordType>> record
    );

    /**
     * Updates a realtime messaging configuration.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @RequestWrapper(localName = "updateRTMConfiguration", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.UpdateRTMConfiguration")
    @WebMethod
    @ResponseWrapper(localName = "updateRTMConfigurationResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.UpdateRTMConfigurationResponse")
    public void updateRTMConfiguration(
        @WebParam(name = "messageName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String messageName,
        @WebParam(name = "queueName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String queueName,
        @WebParam(name = "notificationAddress", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.util.List<java.lang.String> notificationAddress,
        @WebParam(name = "clonePeriod", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String clonePeriod,
        @WebParam(name = "timeZone", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String timeZone,
        @WebParam(name = "audienceRollupPeriod", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String audienceRollupPeriod
    );

    /**
     * Lists all the symbols used in the cell. For example,
     * if the symbol "_FIRSTNAME__" appears in the cell
     * content, the list includes "FIRSTNAME".
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "symbol", targetNamespace = "uri:cp.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listSymbolsInCell", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ListSymbolsInCell")
    @WebMethod
    @ResponseWrapper(localName = "listSymbolsInCellResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ListSymbolsInCellResponse")
    public java.util.List<java.lang.String> listSymbolsInCell(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Provides a list of realtime messaging configurations.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @WebResult(name = "RTMConfiguration", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listRTMConfigurations", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.ListRTMConfigurations")
    @WebMethod
    @ResponseWrapper(localName = "listRTMConfigurationsResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.ListRTMConfigurationsResponse")
    public java.util.List<com.sdk.client.RTMConfigurationType> listRTMConfigurations();

    /**
     * Returns hourly event counts for a specific cellId.
     * 				Introduced in e-Dialog Web Services 1.3.
     *         
     */
    @RequestWrapper(localName = "retrievePulseReport", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrievePulseReport")
    @WebMethod
    @ResponseWrapper(localName = "retrievePulseReportResponse", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrievePulseReportResponse")
    public void retrievePulseReport(
        @WebParam(name = "cellId", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "totalHours", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        int totalHours,
        @WebParam(name = "eventTypeName", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.String> eventTypeName,
        @WebParam(mode = WebParam.Mode.OUT, name = "firstMailSent", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> firstMailSent,
        @WebParam(mode = WebParam.Mode.OUT, name = "pulseReport", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.EventSummaryType>> pulseReport
    );

    /**
     * Returns a link that is associated with an encoded URL sent in a message.
     * Introduced in e-Dialog Web Services 1.3.
     * 
     */
    @RequestWrapper(localName = "lookupLinkByEncodedURL", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com", className = "com.sdk.client.LookupLinkByEncodedURL")
    @WebMethod
    @ResponseWrapper(localName = "lookupLinkByEncodedURLResponse", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com", className = "com.sdk.client.LinkType")
    public void lookupLinkByEncodedURL(
        @WebParam(name = "encodedURL", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        java.lang.String encodedURL,
        @WebParam(mode = WebParam.Mode.OUT, name = "linkId", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> linkId,
        @WebParam(mode = WebParam.Mode.OUT, name = "contentId", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> contentId,
        @WebParam(mode = WebParam.Mode.OUT, name = "targetURL", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> targetURL,
        @WebParam(mode = WebParam.Mode.OUT, name = "originalTargetURL", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> originalTargetURL,
        @WebParam(mode = WebParam.Mode.OUT, name = "enabled", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Boolean> enabled,
        @WebParam(mode = WebParam.Mode.OUT, name = "udf", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> udf,
        @WebParam(mode = WebParam.Mode.OUT, name = "reportName", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> reportName,
        @WebParam(mode = WebParam.Mode.OUT, name = "expirationDate", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> expirationDate
    );

    /**
     * Generates a file that contains a subset of data columns from the full export file.
     * You can get the list of data columns available for generating the permutation by using the listExportedDataColumns function.
     * To check the status of the operation, you can use the getProofSampleStatus function.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @RequestWrapper(localName = "buildPermutationProofSample", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.BuildPermutationProofSample")
    @WebMethod
    @ResponseWrapper(localName = "buildPermutationProofSampleResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.BuildPermutationProofSampleResponse")
    public void buildPermutationProofSample(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "columnName", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        java.util.List<java.lang.String> columnName
    );

    /**
     * Deletes a grid. If you delete a grid that is used in a mail that 
     * has not yet been mailed, the symbols will resolve correctly.
     * However, you cannot use a deleted grid in another cell.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "deleteGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.DeleteGrid")
    @WebMethod
    @ResponseWrapper(localName = "deleteGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.DeleteGridResponse")
    public void deleteGrid(
        @WebParam(name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        int gridId
    );

    /**
     * Retrieves eReports data for mailing that match the
     * 				mailing filtering criteria and the cell filtering criteria
     * 				Filtering
     * 				conditions on mailing IDs and mailing names are ORed.
     * 				Filtering
     * 				conditions on cell IDs and cell names are ORed.
     * 				The filters above are
     * 				then ANDed with UDFs and cell mailed date.
     * 				This method only returns
     * 				those cells of a mailing matching the search
     * 				criteria.
     * 				Introduced in
     * 				e-Dialog Web Services 1.3.
     *         
     */
    @RequestWrapper(localName = "retrieveCellViewEReports", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrieveCellViewEReports")
    @WebMethod
    @ResponseWrapper(localName = "retrieveCellViewEReportsResponse", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrieveCellViewEReportsResponse")
    public void retrieveCellViewEReports(
        @WebParam(name = "mailingIds", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> mailingIds,
        @WebParam(name = "mailingNames", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.String> mailingNames,
        @WebParam(name = "cellIds", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> cellIds,
        @WebParam(name = "cellNames", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.String> cellNames,
        @WebParam(name = "filterMailedDateStart", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterMailedDateStart,
        @WebParam(name = "filterMailedDateEnd", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterMailedDateEnd,
        @WebParam(name = "filterUdf", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.UDFFilterType> filterUdf,
        @WebParam(name = "reportType", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.lang.String reportType,
        @WebParam(mode = WebParam.Mode.OUT, name = "mailings", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.MailingViewType>> mailings,
        @WebParam(mode = WebParam.Mode.OUT, name = "responseCode", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> responseCode
    );

    /**
     * Returns a list of symbols in the specified  text. Introduced in e-Dialog Web Services 1.0.
     */
    @WebResult(name = "symbols", targetNamespace = "uri:content.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listSymbolsInText", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.ListSymbolsInText")
    @WebMethod
    @ResponseWrapper(localName = "listSymbolsInTextResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.ListSymbolsInTextResponse")
    public java.util.List<java.lang.String> listSymbolsInText(
        @WebParam(name = "text", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String text
    );

    /**
     * Returns a list of category names and values for a given entity.
     * Introduced in e-Dialog Web Services 1.3. Ability to return information about 10 UDFs added in e-Dialog Web Services 1.4.2.
     *             
     */
    @WebResult(name = "category", targetNamespace = "uri:udf.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listUdfCategoryNamesAndValues", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListUdfCategoryNamesAndValues")
    @WebMethod
    @ResponseWrapper(localName = "listUdfCategoryNamesAndValuesResponse", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListUdfCategoryNamesAndValuesResponse")
    public java.util.List<com.sdk.client.UDFCategoryType> listUdfCategoryNamesAndValues(
        @WebParam(name = "entity", targetNamespace = "uri:udf.ws.sdk.edialog.com")
        java.lang.String entity
    );

    /**
     * Assigns the set of allowed variations of a realtime messaging configuration.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @RequestWrapper(localName = "updateRTMVariations", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.UpdateRTMVariations")
    @WebMethod
    @ResponseWrapper(localName = "updateRTMVariationsResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.RTMConfigurationType")
    public void updateRTMVariations(
        @WebParam(mode = WebParam.Mode.INOUT, name = "messageName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> messageName,
        @WebParam(name = "selectVariationExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String selectVariationExpression,
        @WebParam(name = "variation", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.RTMVariationEntryType> variation,
        @WebParam(mode = WebParam.Mode.OUT, name = "queueName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> queueName,
        @WebParam(mode = WebParam.Mode.OUT, name = "notificationAddress", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> notificationAddress,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceClassId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> audienceClassId,
        @WebParam(mode = WebParam.Mode.OUT, name = "clonePeriod", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> clonePeriod,
        @WebParam(mode = WebParam.Mode.OUT, name = "cloningTimeZone", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> cloningTimeZone,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceAlternateKeySelectionExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> audienceAlternateKeySelectionExpression,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceNamingExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> audienceNamingExpression,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceUDFExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> audienceUDFExpression,
        @WebParam(mode = WebParam.Mode.OUT, name = "lastClonedDate", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> lastClonedDate,
        @WebParam(mode = WebParam.Mode.OUT, name = "productionCellId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> productionCellId,
        @WebParam(mode = WebParam.Mode.OUT, name = "testCellId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> testCellId,
        @WebParam(mode = WebParam.Mode.OUT, name = "variationConfiguration", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<RTMVariationsSettingsType> variationConfiguration
    );

    /**
     * Creates a data upload configuration to perform a global unsubscribe.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "dataUploadConfig", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createDataUploadConfigForGlobalUnsub", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForGlobalUnsub")
    @WebMethod
    @ResponseWrapper(localName = "createDataUploadConfigForGlobalUnsubResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateDataUploadConfigForGlobalUnsubResponse")
    public com.sdk.client.DataUploadConfigType createDataUploadConfigForGlobalUnsub(
        @WebParam(name = "emailNotification", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.util.List<java.lang.String> emailNotification
    );

    /**
     * Returns a list/array of all available values for each of the five audience UDFs.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "udfValueList", targetNamespace = "uri:udf.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listAudienceUdfs", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListAudienceUdfs")
    @WebMethod
    @ResponseWrapper(localName = "listAudienceUdfsResponse", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListAudienceUdfsResponse")
    public java.util.List<com.sdk.client.UdfValueListType> listAudienceUdfs();

    /**
     * Changes the properties of a mailing.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "updateMailing", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.UpdateMailing")
    @WebMethod
    @ResponseWrapper(localName = "updateMailingResponse", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.UpdateMailingResponse")
    public void updateMailing(
        @WebParam(name = "mailingId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int mailingId,
        @WebParam(name = "name", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "udf", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf
    );

    /**
     * Maps the specified symbol to a literal value. The value appears
     * in the resulting mail unless the literal value itself contains symbols.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "mapSymbolToLiteralValue", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapSymbolToLiteralValue")
    @WebMethod
    @ResponseWrapper(localName = "mapSymbolToLiteralValueResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapSymbolToLiteralValueResponse")
    public void mapSymbolToLiteralValue(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "symbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String symbolName,
        @WebParam(name = "literalValue", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String literalValue
    );

    /**
     * Returns the content ID assigned to the cell.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "contentId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "getCellContentId", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.GetCellContentId")
    @WebMethod
    @ResponseWrapper(localName = "getCellContentIdResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.GetCellContentIdResponse")
    public int getCellContentId(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Allows a user to update the individual MIME representations for
     * a piece of content related by a content ID. Currently,
     * e-Dialog Web Services supports "Text" content,
     * "HTML" content, and "Landing" page content parts.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @RequestWrapper(localName = "updateContentDeliveryPart", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.UpdateContentDeliveryPart")
    @WebMethod
    @ResponseWrapper(localName = "updateContentDeliveryPartResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.UpdateContentDeliveryPartResponse")
    public void updateContentDeliveryPart(
        @WebParam(name = "contentId", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int contentId,
        @WebParam(name = "partName", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String partName,
        @WebParam(name = "data", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String data
    );

    /**
     * Requests the status of the specified cell.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "status", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupCellStatus", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.LookupCellStatus")
    @WebMethod
    @ResponseWrapper(localName = "lookupCellStatusResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.LookupCellStatusResponse")
    public java.lang.String lookupCellStatus(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Marks content object as deleted. Introduced in e-Dialog Web Services 1.0.
     */
    @RequestWrapper(localName = "deleteContent", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.DeleteContent")
    @WebMethod
    @ResponseWrapper(localName = "deleteContentResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.DeleteContentResponse")
    public void deleteContent(
        @WebParam(name = "contentId", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int contentId
    );

    /**
     * Lets you modify advanced cell configuration options, including the domains for handling unsubscribes and redirects,
     *  redirect expiration time, selection of Forward-to-a-Friend template, and error and event mailing. Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @RequestWrapper(localName = "updateCellAdvancedOptions", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellAdvancedOptions")
    @WebMethod
    @ResponseWrapper(localName = "updateCellAdvancedOptionsResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellAdvancedOptionsResponse")
    public void updateCellAdvancedOptions(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "contentFormatText", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String contentFormatText,
        @WebParam(name = "contentFormatHTML", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String contentFormatHTML,
        @WebParam(name = "contentFormatNoPreference", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String contentFormatNoPreference,
        @WebParam(name = "unsubDNS", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String unsubDNS,
        @WebParam(name = "redirectDNS", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String redirectDNS,
        @WebParam(name = "redirectExpirationDays", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.Integer redirectExpirationDays,
        @WebParam(name = "forwardToFriendTemplateName", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String forwardToFriendTemplateName,
        @WebParam(name = "errorNotificationEmailAddress", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.String> errorNotificationEmailAddress,
        @WebParam(name = "eventNotificationEmailAddress", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.String> eventNotificationEmailAddress
    );

    /**
     * Looks up full information about an audience based on the alternate key.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "audience", targetNamespace = "uri:audience.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupAudienceByAlternateKey", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.LookupAudienceByAlternateKey")
    @WebMethod
    @ResponseWrapper(localName = "lookupAudienceByAlternateKeyResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.LookupAudienceByAlternateKeyResponse")
    public com.sdk.client.AudienceDetailType lookupAudienceByAlternateKey(
        @WebParam(name = "alternateKey", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String alternateKey
    );

    /**
     * Deletes a mailing.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "deleteMailing", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.DeleteMailing")
    @WebMethod
    @ResponseWrapper(localName = "deleteMailingResponse", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.DeleteMailingResponse")
    public void deleteMailing(
        @WebParam(name = "mailingId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int mailingId
    );

    /**
     * Updates a  grid for use in content.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "updateXmlGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.UpdateXmlGrid")
    @WebMethod
    @ResponseWrapper(localName = "updateXmlGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.UpdateXmlGridResponse")
    public void updateXmlGrid(
        @WebParam(name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        int gridId,
        @WebParam(name = "name", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "xmlData", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String xmlData
    );

    /**
     * Maps the specified symbol to a content object reference.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "mapSymbolToContent", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapSymbolToContent")
    @WebMethod
    @ResponseWrapper(localName = "mapSymbolToContentResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapSymbolToContentResponse")
    public void mapSymbolToContent(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "symbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String symbolName,
        @WebParam(name = "contentId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int contentId
    );

    /**
     * Returns a list of cells filtered by the specified settings.
     * Returns only a limited set of cell properties. Filter settings are optional.
     * Introduced in e-Dialog Web Services 1.3.
     * 
     */
    @RequestWrapper(localName = "listCellsByFilter", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListCellsByFilter")
    @WebMethod
    @ResponseWrapper(localName = "listCellsByFilterResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListCellsByFilterResponse")
    public void listCellsByFilter(
        @WebParam(name = "filterMailingId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> filterMailingId,
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterCreateDateStart", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateStart,
        @WebParam(name = "filterCreateDateEnd", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateEnd,
        @WebParam(name = "filterFirstMailedDateStart", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateStart,
        @WebParam(name = "filterFirstMailedDateEnd", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateEnd,
        @WebParam(name = "filterStatus", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.String> filterStatus,
        @WebParam(name = "filterUpdateDateStart", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateStart,
        @WebParam(name = "filterUpdateDateEnd", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateEnd,
        @WebParam(name = "filterUdf", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.UDFFilterType> filterUdf,
        @WebParam(name = "sortBy", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int pageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "currentPageNumber", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> currentPageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfRows", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfRows,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfPages", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfPages,
        @WebParam(mode = WebParam.Mode.OUT, name = "cell", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.CellOverviewType>> cell
    );

    /**
     * Assigns the specified e-mail headers to a cell. The headers are
     * included in each message sent through the cell. Headers can
     * contain merge symbols.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @RequestWrapper(localName = "updateCellHeaders", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellHeaders")
    @WebMethod
    @ResponseWrapper(localName = "updateCellHeadersResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellHeadersResponse")
    public void updateCellHeaders(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "headers", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String headers
    );

    /**
     * Returns a list of content objects. Returns only a limited set of properties. Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @WebResult(name = "contentAltList", targetNamespace = "uri:content.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listContentAlt", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.ListContentAlt")
    @WebMethod
    @ResponseWrapper(localName = "listContentAltResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.ListContentAltResponse")
    public com.sdk.client.ContentListItemAltType listContentAlt(
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterCreateDateStart", targetNamespace = "uri:content.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateStart,
        @WebParam(name = "filterCreateDateEnd", targetNamespace = "uri:content.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateEnd,
        @WebParam(name = "filterUpdateDateStart", targetNamespace = "uri:content.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateStart,
        @WebParam(name = "filterUpdateDateEnd", targetNamespace = "uri:content.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateEnd,
        @WebParam(name = "sortBy", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int pageNumber
    );

    /**
     * Gets the data upload status of the specified file.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "status", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupDataUploadStatus", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.LookupDataUploadStatus")
    @WebMethod
    @ResponseWrapper(localName = "lookupDataUploadStatusResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.LookupDataUploadStatusResponse")
    public com.sdk.client.UploadStatusType lookupDataUploadStatus(
        @WebParam(name = "filename", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.lang.String filename
    );

    /**
     * Returns a list of available Forward-to-a-Friend template names.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "templateName", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listForwardToFriendTemplates", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListForwardToFriendTemplates")
    @WebMethod
    @ResponseWrapper(localName = "listForwardToFriendTemplatesResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListForwardToFriendTemplatesResponse")
    public java.util.List<java.lang.String> listForwardToFriendTemplates();

    /**
     * Get a list of links filtered by the specified settings. Filter settings are optional.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "listLinks", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com", className = "com.sdk.client.ListLinks")
    @WebMethod
    @ResponseWrapper(localName = "listLinksResponse", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com", className = "com.sdk.client.ListLinksResponse")
    public void listLinks(
        @WebParam(name = "filterMailingId", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        java.lang.Integer filterMailingId,
        @WebParam(name = "filterCellId", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        java.lang.Integer filterCellId,
        @WebParam(name = "filterEnabled", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        java.lang.Boolean filterEnabled,
        @WebParam(name = "filterExpiresAfter", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterExpiresAfter,
        @WebParam(name = "filterExpiresBefore", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterExpiresBefore,
        @WebParam(name = "sortBy", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        int pageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "currentPageNumber", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> currentPageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfRows", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfRows,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfPages", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfPages,
        @WebParam(mode = WebParam.Mode.OUT, name = "link", targetNamespace = "uri:urlmanagement.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.LinkType>> link
    );

    /**
     * Provides a list of available realtime messaging queues.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @WebResult(name = "queue", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listRTMQueues", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.ListRTMQueues")
    @WebMethod
    @ResponseWrapper(localName = "listRTMQueuesResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.ListRTMQueuesResponse")
    public java.util.List<java.lang.String> listRTMQueues();

    /**
     * Creates a new realtime messaging configuration.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @RequestWrapper(localName = "createRTMConfiguration", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.CreateRTMConfiguration")
    @WebMethod
    @ResponseWrapper(localName = "createRTMConfigurationResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.CreateRTMConfigurationResponse")
    public void createRTMConfiguration(
        @WebParam(name = "messageName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String messageName,
        @WebParam(name = "queueName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String queueName,
        @WebParam(name = "notificationAddress", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.util.List<java.lang.String> notificationAddress,
        @WebParam(name = "clonePeriod", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String clonePeriod,
        @WebParam(name = "timeZone", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String timeZone,
        @WebParam(name = "audienceClassId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.Integer audienceClassId,
        @WebParam(name = "audienceRollupPeriod", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String audienceRollupPeriod
    );

    /**
     * Allows a user to retrieve the individual MIME representations for
     * a piece of content related by a content ID. Currently, e-Dialog
     * Web Services support "Text" content, "HTML"
     * content, and "landing" page content parts.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @WebResult(name = "data", targetNamespace = "uri:content.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupContentDeliveryPart", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.LookupContentDeliveryPart")
    @WebMethod
    @ResponseWrapper(localName = "lookupContentDeliveryPartResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.LookupContentDeliveryPartResponse")
    public java.lang.String lookupContentDeliveryPart(
        @WebParam(name = "contentId", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int contentId,
        @WebParam(name = "partName", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String partName
    );

    /**
     * Retrieves the rows and columns of a grid that is stored in rows, including the key column. 
     * For a grid stored in tab-delimited format, use lookupTabSeparatedGrid(). 
     * For a grid stored in XML, use lookupXMLGrid().
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "lookupGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.LookupGrid")
    @WebMethod
    @ResponseWrapper(localName = "lookupGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.GridType")
    public void lookupGrid(
        @WebParam(mode = WebParam.Mode.INOUT, name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> gridId,
        @WebParam(mode = WebParam.Mode.OUT, name = "name", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> name,
        @WebParam(mode = WebParam.Mode.OUT, name = "description", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> description,
        @WebParam(mode = WebParam.Mode.OUT, name = "dateAdded", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> dateAdded,
        @WebParam(mode = WebParam.Mode.OUT, name = "dateUpdate", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> dateUpdate,
        @WebParam(mode = WebParam.Mode.OUT, name = "onlyAsXML", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Boolean> onlyAsXML,
        @WebParam(mode = WebParam.Mode.OUT, name = "row", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.GridRowType>> row
    );

    /**
     * Returns a list/array of all available values for each of the five mailing UDFs.
     * Introduced in e-Dialog Web Services 1.0.
     * 
     */
    @WebResult(name = "udfValueList", targetNamespace = "uri:udf.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listMailingUdfs", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListMailingUdfs")
    @WebMethod
    @ResponseWrapper(localName = "listMailingUdfsResponse", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListMailingUdfsResponse")
    public java.util.List<com.sdk.client.UdfValueListType> listMailingUdfs();

    /**
     * Map a specific grid column to a symbol that is used in cell content.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "mapGridColumnToSymbol", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapGridColumnToSymbol")
    @WebMethod
    @ResponseWrapper(localName = "mapGridColumnToSymbolResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapGridColumnToSymbolResponse")
    public void mapGridColumnToSymbol(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "gridId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int gridId,
        @WebParam(name = "columnName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String columnName,
        @WebParam(name = "symbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String symbolName,
        @WebParam(name = "keySymbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String keySymbolName
    );

    /**
     * Returns a list of customer IDs that were used for a specific LProof
     * group during the most recent build sample operation.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "cid", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listProofGroupSampleCIDs", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ListProofGroupSampleCIDs")
    @WebMethod
    @ResponseWrapper(localName = "listProofGroupSampleCIDsResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ListProofGroupSampleCIDsResponse")
    public java.util.List<java.lang.Integer> listProofGroupSampleCIDs(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "groupNumber", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int groupNumber
    );

    /**
     * Marks content object as hidden, which results if it is not
     * appearing in listContent results. However, you can look up
     * hidden content with the lookupContentByAlternateKey() and
     * lookupContentById() functions. You cannot hide content that is
     * a cell’s main content item.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "hideContent", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.HideContent")
    @WebMethod
    @ResponseWrapper(localName = "hideContentResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.HideContentResponse")
    public void hideContent(
        @WebParam(name = "contentId", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int contentId
    );

    /**
     * Maps a specific symbol to a data column. The data column must
     * exist in the set returned by listDataColumnsForCell.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "mapSymbolToDataColumn", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapSymbolToDataColumn")
    @WebMethod
    @ResponseWrapper(localName = "mapSymbolToDataColumnResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapSymbolToDataColumnResponse")
    public void mapSymbolToDataColumn(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "symbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String symbolName,
        @WebParam(name = "columnName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String columnName,
        @WebParam(name = "defaultValue", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String defaultValue
    );

    /**
     * Mark content as unhidden so that it appears in listContent results.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "unhideContent", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.UnhideContent")
    @WebMethod
    @ResponseWrapper(localName = "unhideContentResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.UnhideContentResponse")
    public void unhideContent(
        @WebParam(name = "contentId", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int contentId
    );

    /**
     * Returns a list of all master database columns to which a symbol
     * within the specified cell can be mapped (see mapSymbolToDataColumn).
     * Assign audience lists to the cell before you call this function.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "columnName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listDataColumnsForCell", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ListDataColumnsForCell")
    @WebMethod
    @ResponseWrapper(localName = "listDataColumnsForCellResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ListDataColumnsForCellResponse")
    public java.util.List<java.lang.String> listDataColumnsForCell(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Removes all symbol mappings.
     *             Introduced in e-Dialog Web Services 1.3.
     * 			
     */
    @RequestWrapper(localName = "clearSymbolMap", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ClearSymbolMap")
    @WebMethod
    @ResponseWrapper(localName = "clearSymbolMapResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ClearSymbolMapResponse")
    public void clearSymbolMap(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "includeUnsupportedSymbols", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        boolean includeUnsupportedSymbols
    );

    /**
     * Returns a list of category names for cell UDFs.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "category", targetNamespace = "uri:udf.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listCellUdfCategoryNames", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListCellUdfCategoryNames")
    @WebMethod
    @ResponseWrapper(localName = "listCellUdfCategoryNamesResponse", targetNamespace = "uri:udf.ws.sdk.edialog.com", className = "com.sdk.client.ListCellUdfCategoryNamesResponse")
    public java.util.List<java.lang.String> listCellUdfCategoryNames();

    /**
     * Returns the properties of an InsightBuilder query identified by a given ID.
     * Introduced in e-Dialog Web Services 1.4.
     *             
     */
    @RequestWrapper(localName = "lookupIBQueryById", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com", className = "com.sdk.client.LookupIBQueryById")
    @WebMethod
    @ResponseWrapper(localName = "lookupIBQueryByIdResponse", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com", className = "com.sdk.client.IBQueryType")
    public void lookupIBQueryById(
        @WebParam(mode = WebParam.Mode.INOUT, name = "queryId", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> queryId,
        @WebParam(mode = WebParam.Mode.OUT, name = "name", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> name,
        @WebParam(mode = WebParam.Mode.OUT, name = "description", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> description,
        @WebParam(mode = WebParam.Mode.OUT, name = "state", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> state,
        @WebParam(mode = WebParam.Mode.OUT, name = "notificationEmailAddress", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> notificationEmailAddress,
        @WebParam(mode = WebParam.Mode.OUT, name = "createDate", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> createDate,
        @WebParam(mode = WebParam.Mode.OUT, name = "updateDate", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> updateDate,
        @WebParam(mode = WebParam.Mode.OUT, name = "recipientCount", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> recipientCount
    );

    /**
     * Deletes the specified cell. You cannot delete a cell whose status is "Mailed."
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "deleteCell", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.DeleteCell")
    @WebMethod
    @ResponseWrapper(localName = "deleteCellResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.DeleteCellResponse")
    public void deleteCell(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Sends proofs for the specified cell.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "sendProofsNow", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendProofsNow")
    @WebMethod
    @ResponseWrapper(localName = "sendProofsNowResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendProofsNowResponse")
    public void sendProofsNow(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Returns a list of the unsubscribe templates available to the cell.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "unsubTemplate", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listUnsubTemplates", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListUnsubTemplates")
    @WebMethod
    @ResponseWrapper(localName = "listUnsubTemplatesResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListUnsubTemplatesResponse")
    public java.util.List<com.sdk.client.UnsubTemplateType> listUnsubTemplates();

    /**
     * Adds or updates recipient profile data, adds a recipient to audience lists,
     * and removes a recipient from audience lists.
     * Introduced in e-Dialog Web Services 1.1.
     * 
     */
    @WebResult(name = "UUID", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
    @RequestWrapper(localName = "updateRecipientProfile", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com", className = "com.sdk.client.UpdateRecipientProfile")
    @WebMethod
    @ResponseWrapper(localName = "updateRecipientProfileResponse", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com", className = "com.sdk.client.UpdateRecipientProfileResponse")
    public java.lang.String updateRecipientProfile(
        @WebParam(name = "masterProperty", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.PropertyType> masterProperty,
        @WebParam(name = "audienceMembership", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.AudienceMembershipType> audienceMembership,
        @WebParam(name = "audienceRemoval", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
        java.util.List<java.lang.String> audienceRemoval
    );

    /**
     * Specifies the e-mail addresses to receive proofs of the specified cell.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "setCellProofAddresses", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.SetCellProofAddresses")
    @WebMethod
    @ResponseWrapper(localName = "setCellProofAddressesResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.SetCellProofAddressesResponse")
    public void setCellProofAddresses(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "proofAddress", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.String> proofAddress
    );

    /**
     * Attempts to pause a cell that is sending proofs or final e-mails.
     * A cell must have a status of MAILING, MERGED, MERGING, or PROOFING to be paused.
     * MERGING, MERGED status support added in e-Dialog Web Services 1.3.
     * Introduced in e-Dialog Web Services 1.1.                
     *             
     */
    @RequestWrapper(localName = "pauseCell", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.PauseCell")
    @WebMethod
    @ResponseWrapper(localName = "pauseCellResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.PauseCellResponse")
    public void pauseCell(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Returns the properties of an InsightBuilder query identified by a given ID.
     * Introduced in e-Dialog Web Services 1.4.
     *             
     */
    @RequestWrapper(localName = "listIBQueries", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com", className = "com.sdk.client.ListIBQueries")
    @WebMethod
    @ResponseWrapper(localName = "listIBQueriesResponse", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com", className = "com.sdk.client.ListIBQueriesResponse")
    public void listIBQueries(
        @WebParam(name = "filterQueryId", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> filterQueryId,
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterCreateDateStart", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateStart,
        @WebParam(name = "filterCreateDateEnd", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateEnd,
        @WebParam(name = "filterUpdateDateStart", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateStart,
        @WebParam(name = "filterUpdateDateEnd", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateEnd,
        @WebParam(name = "filterState", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        java.util.List<java.lang.String> filterState,
        @WebParam(name = "sortBy", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        int pageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "currentPageNumber", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> currentPageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfRows", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfRows,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfPages", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfPages,
        @WebParam(mode = WebParam.Mode.OUT, name = "IBQuery", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.IBQueryType>> ibQuery
    );

    /**
     * Returns the content object that has the specified ID. Introduced in e-Dialog Web Services 1.0.
     */
    @WebResult(name = "contentItem", targetNamespace = "uri:content.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupContentById", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.LookupContentById")
    @WebMethod
    @ResponseWrapper(localName = "lookupContentByIdResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.LookupContentByIdResponse")
    public com.sdk.client.ContentItemType lookupContentById(
        @WebParam(name = "contentId", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int contentId
    );

    /**
     * Updates specific properties of a campaign. Throws an exception if the campaign does not exist (or has been deleted).
     * Introduced in e-Dialog Web Services 1.0.
     * 
     */
    @RequestWrapper(localName = "updateCampaign", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCampaign")
    @WebMethod
    @ResponseWrapper(localName = "updateCampaignResponse", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCampaignResponse")
    public void updateCampaign(
        @WebParam(name = "campaignId", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        int campaignId,
        @WebParam(name = "name", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "udf", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf
    );

    /**
     * Gets information about the proof sample. If the sample type is Random (created with the
     * buildRandomProofSample function), returns the size of the sample. If the sample type is
     * Permutation (created with the buildPermutationProofSample function), returns a list/array
     * of column names. 
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "proofSampleSetting", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "getProofSampleSetting", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.GetProofSampleSetting")
    @WebMethod
    @ResponseWrapper(localName = "getProofSampleSettingResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.GetProofSampleSettingResponse")
    public com.sdk.client.ProofSampleSettingType getProofSampleSetting(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Looks for a mailing using the specified ID.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "mailing", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupMailingById", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.LookupMailingById")
    @WebMethod
    @ResponseWrapper(localName = "lookupMailingByIdResponse", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.LookupMailingByIdResponse")
    public com.sdk.client.MailingDetailType lookupMailingById(
        @WebParam(name = "mailingId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int mailingId
    );

    /**
     * Sets the audience lists attached to a cell.
     *             The set of data fields available to custom publishing functions changes as audience lists change.
     *             If an audience change invalidates any existing field mappings, this function does not touch those mappings.
     *             However, adjusting audiences after setting field mappings may cause a cell to fail when mailed.
     *             Calling this function will always set the recipient and suppression audiences. 
     *             Call the service lookupCellById or lookupCellByAlternateKey to get the current set of recipient and suppression audiences associated
     *             with the cell.
     *             Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "setCellAudiences", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.SetCellAudiences")
    @WebMethod
    @ResponseWrapper(localName = "setCellAudiencesResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.SetCellAudiencesResponse")
    public void setCellAudiences(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "recipientAudience", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> recipientAudience,
        @WebParam(name = "suppressionAudience", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> suppressionAudience
    );

    /**
     * Returns a list of domains that you can use in mailings. There are two different types/sets of domains:
     * domains that can be used in from addresses, and domains that can be used for redirected links.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "domain", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listDomains", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListDomains")
    @WebMethod
    @ResponseWrapper(localName = "listDomainsResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListDomainsResponse")
    public java.util.List<java.lang.String> listDomains(
        @WebParam(name = "domainType", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String domainType
    );

    /**
     * Updates the properties of an audience.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "updateAudience", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.UpdateAudience")
    @WebMethod
    @ResponseWrapper(localName = "updateAudienceResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.UpdateAudienceResponse")
    public void updateAudience(
        @WebParam(name = "audienceId", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int audienceId,
        @WebParam(name = "name", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "udf", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf
    );

    /**
     * Removes all RTM variations from an RTM configuration.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @RequestWrapper(localName = "deleteAllRTMVariations", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.DeleteAllRTMVariations")
    @WebMethod
    @ResponseWrapper(localName = "deleteAllRTMVariationsResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.RTMConfigurationType")
    public void deleteAllRTMVariations(
        @WebParam(mode = WebParam.Mode.INOUT, name = "messageName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> messageName,
        @WebParam(mode = WebParam.Mode.OUT, name = "queueName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> queueName,
        @WebParam(mode = WebParam.Mode.OUT, name = "notificationAddress", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> notificationAddress,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceClassId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> audienceClassId,
        @WebParam(mode = WebParam.Mode.OUT, name = "clonePeriod", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> clonePeriod,
        @WebParam(mode = WebParam.Mode.OUT, name = "cloningTimeZone", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> cloningTimeZone,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceAlternateKeySelectionExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> audienceAlternateKeySelectionExpression,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceNamingExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> audienceNamingExpression,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceUDFExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> audienceUDFExpression,
        @WebParam(mode = WebParam.Mode.OUT, name = "lastClonedDate", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> lastClonedDate,
        @WebParam(mode = WebParam.Mode.OUT, name = "productionCellId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> productionCellId,
        @WebParam(mode = WebParam.Mode.OUT, name = "testCellId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> testCellId,
        @WebParam(mode = WebParam.Mode.OUT, name = "variationConfiguration", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<RTMVariationsSettingsType> variationConfiguration
    );

    /**
     * Looks up an existing campaign by identifier. Returns a 
     * campaignDetailType structure containing identifier, name, 
     * description, creation date, modification date, and user-defined field values.
     * Introduced in e-Dialog Web Services 1.0.
     * 
     */
    @WebResult(name = "campaign", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupCampaignById", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.LookupCampaignById")
    @WebMethod
    @ResponseWrapper(localName = "lookupCampaignByIdResponse", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.LookupCampaignByIdResponse")
    public com.sdk.client.CampaignDetailType lookupCampaignById(
        @WebParam(name = "campaignId", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        int campaignId
    );

    /**
     * Attempts to asynchronously mail a cell at the time previously set
     * for merging and mailing. Does not require that the cell has been
     * proofed.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "sendCellAsScheduled", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendCellAsScheduled")
    @WebMethod
    @ResponseWrapper(localName = "sendCellAsScheduledResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendCellAsScheduledResponse")
    public void sendCellAsScheduled(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Generates the random sample file that contains a subset of rows
     * from the full export file, with a maximum number of records set by the sampleSize.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @RequestWrapper(localName = "buildRandomProofSample", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.BuildRandomProofSample")
    @WebMethod
    @ResponseWrapper(localName = "buildRandomProofSampleResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.BuildRandomProofSampleResponse")
    public void buildRandomProofSample(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "sampleSize", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int sampleSize
    );

    /**
     * Lists all the columns in the grid,  excluding the key column.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @WebResult(name = "column", targetNamespace = "uri:grid.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listGridColumns", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.ListGridColumns")
    @WebMethod
    @ResponseWrapper(localName = "listGridColumnsResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.ListGridColumnsResponse")
    public java.util.List<java.lang.String> listGridColumns(
        @WebParam(name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        int gridId
    );

    /**
     * Returns a JSON structure of all current symbol mappings. See the
     * Developer's Guide for a description of the JSON data structure and
     * valid symbol definitions.
     * In a newly created cell (before calling resetSymbolMap) the structure
     * shows each symbol mapped to an empty literal value.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "symbolMap", targetNamespace = "uri:cp.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupSymbolMap", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.LookupSymbolMap")
    @WebMethod
    @ResponseWrapper(localName = "lookupSymbolMapResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.LookupSymbolMapResponse")
    public java.lang.String lookupSymbolMap(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Updates the specified content object.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "updateContent", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.UpdateContent")
    @WebMethod
    @ResponseWrapper(localName = "updateContentResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.UpdateContentResponse")
    public void updateContent(
        @WebParam(name = "contentId", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int contentId,
        @WebParam(name = "name", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "textData", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String textData,
        @WebParam(name = "htmlData", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String htmlData,
        @WebParam(name = "udf", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf
    );

    /**
     * Assigns a cell to a realtime messaging configuration as the "test" cell. 
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @RequestWrapper(localName = "updateRTMTestCell", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.UpdateRTMTestCell")
    @WebMethod
    @ResponseWrapper(localName = "updateRTMTestCellResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.UpdateRTMTestCellResponse")
    public void updateRTMTestCell(
        @WebParam(name = "messageName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String messageName,
        @WebParam(name = "cellId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "variationKey", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        java.lang.String variationKey
    );

    /**
     * Gets a list of defined data column information from the data dictionary.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "column", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listAllDataColumns", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.ListAllDataColumns")
    @WebMethod
    @ResponseWrapper(localName = "listAllDataColumnsResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.ListAllDataColumnsResponse")
    public java.util.List<com.sdk.client.DataColumnType> listAllDataColumns();

    /**
     * Maps a key value from the grid to a symbol in the cell content.
     * The keySymbolName is not a symbol ( _SYMBOL__).
     * It is a key value from the grid.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "mapGridColumnToSymbolByKeyLiteral", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapGridColumnToSymbolByKeyLiteral")
    @WebMethod
    @ResponseWrapper(localName = "mapGridColumnToSymbolByKeyLiteralResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapGridColumnToSymbolByKeyLiteralResponse")
    public void mapGridColumnToSymbolByKeyLiteral(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "gridId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int gridId,
        @WebParam(name = "columnName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String columnName,
        @WebParam(name = "symbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String symbolName,
        @WebParam(name = "keySymbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String keySymbolName
    );

    /**
     * Returns the status of the operation to build the proof sample.
     * One of the following: "Processing", Processed", "Failed", "None".
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "ProofSampleStatus", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "getProofSampleStatus", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.GetProofSampleStatus")
    @WebMethod
    @ResponseWrapper(localName = "getProofSampleStatusResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.GetProofSampleStatusResponse")
    public com.sdk.client.ProofSampleStatusType getProofSampleStatus(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * List grids according matching filtering conditions.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "listGrids", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.ListGrids")
    @WebMethod
    @ResponseWrapper(localName = "listGridsResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.ListGridsResponse")
    public void listGrids(
        @WebParam(name = "filterGridName", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String filterGridName,
        @WebParam(name = "filterGridDescription", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String filterGridDescription,
        @WebParam(name = "filterAddDateStart", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterAddDateStart,
        @WebParam(name = "filterAddDateEnd", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterAddDateEnd,
        @WebParam(name = "filterUpdateDateStart", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateStart,
        @WebParam(name = "filterUpdateDateEnd", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateEnd,
        @WebParam(name = "sortBy", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        int pageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "currentPageNumber", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> currentPageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfRows", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfRows,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfPages", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfPages,
        @WebParam(mode = WebParam.Mode.OUT, name = "grid", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.GridEntryType>> grid
    );

    /**
     * Returns true if the user has permission to access the client ID or schema name passed as an argument.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @WebResult(name = "status", targetNamespace = "uri:user.ws.sdk.edialog.com")
    @RequestWrapper(localName = "canAccessClient", targetNamespace = "uri:user.ws.sdk.edialog.com", className = "com.sdk.client.CanAccessClient")
    @WebMethod
    @ResponseWrapper(localName = "canAccessClientResponse", targetNamespace = "uri:user.ws.sdk.edialog.com", className = "com.sdk.client.CanAccessClientResponse")
    public boolean canAccessClient(
        @WebParam(name = "clientIdentifer", targetNamespace = "uri:user.ws.sdk.edialog.com")
        java.lang.String clientIdentifer
    );

    /**
     * Returns the status of the export job associated with the cell
     * 				(ExportJobStatus object).
     * 				Introduced in e-Dialog Web Services 1.0.
     *         
     */
    @RequestWrapper(localName = "getExportJobStatus", targetNamespace = "uri:exporter.ws.sdk.edialog.com", className = "com.sdk.client.GetExportJobStatus")
    @WebMethod
    @ResponseWrapper(localName = "getExportJobStatusResponse", targetNamespace = "uri:exporter.ws.sdk.edialog.com", className = "com.sdk.client.ExportJobStatusType")
    public void getExportJobStatus(
        @WebParam(name = "cellId", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
        int cellId,
        @WebParam(mode = WebParam.Mode.OUT, name = "status", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> status,
        @WebParam(mode = WebParam.Mode.OUT, name = "statusText", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> statusText,
        @WebParam(mode = WebParam.Mode.OUT, name = "processedRows", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> processedRows,
        @WebParam(mode = WebParam.Mode.OUT, name = "exportedRows", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> exportedRows,
        @WebParam(mode = WebParam.Mode.OUT, name = "exportFileName", targetNamespace = "uri:exporter.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> exportFileName
    );

    /**
     * Retrieves the rows and columns of a grid that is stored in tab-delimited format, including the key column. 
     * For a grid stored in rows, use lookupGrid(). 
     * For a grid stored in XML, use lookupXMLGrid().
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "lookupTabSeparatedGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.LookupTabSeparatedGrid")
    @WebMethod
    @ResponseWrapper(localName = "lookupTabSeparatedGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.GridTabSeparatedType")
    public void lookupTabSeparatedGrid(
        @WebParam(mode = WebParam.Mode.INOUT, name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> gridId,
        @WebParam(mode = WebParam.Mode.OUT, name = "name", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> name,
        @WebParam(mode = WebParam.Mode.OUT, name = "description", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> description,
        @WebParam(mode = WebParam.Mode.OUT, name = "dateAdded", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> dateAdded,
        @WebParam(mode = WebParam.Mode.OUT, name = "dateUpdate", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> dateUpdate,
        @WebParam(mode = WebParam.Mode.OUT, name = "onlyAsXML", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Boolean> onlyAsXML,
        @WebParam(mode = WebParam.Mode.OUT, name = "tabSeparatedData", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> tabSeparatedData
    );

    /**
     * Lists all the values in the key column of the grid. These are the 
     * values that are used to determine what content to merge for each
     * recipient.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @WebResult(name = "key", targetNamespace = "uri:grid.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listGridKeyValues", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.ListGridKeyValues")
    @WebMethod
    @ResponseWrapper(localName = "listGridKeyValuesResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.ListGridKeyValuesResponse")
    public java.util.List<java.lang.String> listGridKeyValues(
        @WebParam(name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        int gridId
    );

    /**
     * Look up member properties data when a recipient clicks on a link in an e-mail. Introduced in e-Dialog Web Services 1.2. 
     *             
     */
    @WebResult(name = "actionList", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listRecipientCellEvents", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com", className = "com.sdk.client.ListRecipientCellEvents")
    @WebMethod
    @ResponseWrapper(localName = "listRecipientCellEventsResponse", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com", className = "com.sdk.client.ListRecipientCellEventsResponse")
    public com.sdk.client.RecipientActionType listRecipientCellEvents(
        @WebParam(name = "cellId", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "recipientProfileKeys", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.SimplePropertyType> recipientProfileKeys
    );

    /**
     * Returns a list of custom functions to which a symbol within the
     * cell can be mapped. See mapSymbolToCustomFunction.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "functionName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listMappingFunctionsForCell", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ListMappingFunctionsForCell")
    @WebMethod
    @ResponseWrapper(localName = "listMappingFunctionsForCellResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.ListMappingFunctionsForCellResponse")
    public java.util.List<java.lang.String> listMappingFunctionsForCell(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Look up member properties data. Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @WebResult(name = "memberInfo", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupRecipientAudienceProfile", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com", className = "com.sdk.client.LookupRecipientAudienceProfile")
    @WebMethod
    @ResponseWrapper(localName = "lookupRecipientAudienceProfileResponse", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com", className = "com.sdk.client.LookupRecipientAudienceProfileResponse")
    public com.sdk.client.LookupAudiencePropertiesType lookupRecipientAudienceProfile(
        @WebParam(name = "audienceId", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
        int audienceId,
        @WebParam(name = "recipientProfileKeys", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.SimplePropertyType> recipientProfileKeys
    );

    /**
     * (Deprecated. Use the service listRTMConfigurations)
     * Provides a list of realtime messaging configurations.
     * Introduced in e-Dialog Web Services 1.1
     *             
     */
    @WebResult(name = "rtmList", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listRealTimeMessageConfigurations", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com", className = "com.sdk.client.ListRealTimeMessageConfigurations")
    @WebMethod
    @ResponseWrapper(localName = "listRealTimeMessageConfigurationsResponse", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com", className = "com.sdk.client.ListRealTimeMessageConfigurationsResponse")
    public com.sdk.client.RtmListType listRealTimeMessageConfigurations();

    /**
     * Gets a list of defined master database unique key columns information.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "column", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listMasterUniqueKeyColumns", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.ListMasterUniqueKeyColumns")
    @WebMethod
    @ResponseWrapper(localName = "listMasterUniqueKeyColumnsResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.ListMasterUniqueKeyColumnsResponse")
    public java.util.List<com.sdk.client.DataColumnType> listMasterUniqueKeyColumns();

    /**
     * Creates a content object and stores it in the Content Library. Introduced in e-Dialog Web Services 1.0.
     */
    @WebResult(name = "contentId", targetNamespace = "uri:content.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createContent", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.CreateContent")
    @WebMethod
    @ResponseWrapper(localName = "createContentResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.CreateContentResponse")
    public int createContent(
        @WebParam(name = "name", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "textData", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String textData,
        @WebParam(name = "htmlData", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String htmlData,
        @WebParam(name = "udf", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf,
        @WebParam(name = "alternateKey", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String alternateKey
    );

    /**
     * Retrieves a realtime messaging configuration by message name.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @RequestWrapper(localName = "lookupRTMConfiguration", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.LookupRTMConfiguration")
    @WebMethod
    @ResponseWrapper(localName = "lookupRTMConfigurationResponse", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com", className = "com.sdk.client.RTMConfigurationType")
    public void lookupRTMConfiguration(
        @WebParam(mode = WebParam.Mode.INOUT, name = "messageName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> messageName,
        @WebParam(mode = WebParam.Mode.OUT, name = "queueName", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> queueName,
        @WebParam(mode = WebParam.Mode.OUT, name = "notificationAddress", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> notificationAddress,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceClassId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> audienceClassId,
        @WebParam(mode = WebParam.Mode.OUT, name = "clonePeriod", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> clonePeriod,
        @WebParam(mode = WebParam.Mode.OUT, name = "cloningTimeZone", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> cloningTimeZone,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceAlternateKeySelectionExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> audienceAlternateKeySelectionExpression,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceNamingExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> audienceNamingExpression,
        @WebParam(mode = WebParam.Mode.OUT, name = "audienceUDFExpression", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<java.lang.String>> audienceUDFExpression,
        @WebParam(mode = WebParam.Mode.OUT, name = "lastClonedDate", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> lastClonedDate,
        @WebParam(mode = WebParam.Mode.OUT, name = "productionCellId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> productionCellId,
        @WebParam(mode = WebParam.Mode.OUT, name = "testCellId", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> testCellId,
        @WebParam(mode = WebParam.Mode.OUT, name = "variationConfiguration", targetNamespace = "uri:realtimemessagingconfiguration.ws.sdk.edialog.com")
        javax.xml.ws.Holder<RTMVariationsSettingsType> variationConfiguration
    );

    /**
     * Retrieves the rows and columns of a grid that is stored in XML format, including the key column. 
     * For a grid stored in rows, use lookupGrid(). 
     * For a grid stored in tab-delimited format, use lookupTabSeparatedGrid().
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "lookupXmlGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.LookupXmlGrid")
    @WebMethod
    @ResponseWrapper(localName = "lookupXmlGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.GridXmlType")
    public void lookupXmlGrid(
        @WebParam(mode = WebParam.Mode.INOUT, name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> gridId,
        @WebParam(mode = WebParam.Mode.OUT, name = "name", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> name,
        @WebParam(mode = WebParam.Mode.OUT, name = "description", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> description,
        @WebParam(mode = WebParam.Mode.OUT, name = "dateAdded", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> dateAdded,
        @WebParam(mode = WebParam.Mode.OUT, name = "dateUpdate", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<javax.xml.datatype.XMLGregorianCalendar> dateUpdate,
        @WebParam(mode = WebParam.Mode.OUT, name = "onlyAsXML", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Boolean> onlyAsXML,
        @WebParam(mode = WebParam.Mode.OUT, name = "xmlData", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.String> xmlData
    );

    /**
     * Returns a list of clients that are available to the currently logged in user.
     * Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @WebResult(name = "clientList", targetNamespace = "uri:user.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listClients", targetNamespace = "uri:user.ws.sdk.edialog.com", className = "com.sdk.client.ListClients")
    @WebMethod
    @ResponseWrapper(localName = "listClientsResponse", targetNamespace = "uri:user.ws.sdk.edialog.com", className = "com.sdk.client.ListClientsResponse")
    public java.util.List<com.sdk.client.ClientListType> listClients();

    /**
     * Adds or updates recipient profile data and sends a message to a single recipient.
     * For example, if a customer purchases goods from your web site, you can instantly 
     * update the customer's shipping address and send that customer an order confirmation 
     * message that includes a detailed list of items purchased, quantities, prices, 
     * discounts, shipping fees, and so forth.
     * Introduced in e-Dialog Web Services 1.1.
     * 
     */
    @WebResult(name = "UUID", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
    @RequestWrapper(localName = "sendMessage", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com", className = "com.sdk.client.SendMessage")
    @WebMethod
    @ResponseWrapper(localName = "sendMessageResponse", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com", className = "com.sdk.client.SendMessageResponse")
    public java.lang.String sendMessage(
        @WebParam(name = "messageName", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
        java.lang.String messageName,
        @WebParam(name = "property", targetNamespace = "uri:realtimemessaging.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.PropertyType> property
    );

    /**
     * Returns the advanced cell configuration settings for the cell. Introduced in e-Dialog Web Services 1.1.
     */
    @WebResult(name = "cell", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupCellAdvancedOptionsById", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.LookupCellAdvancedOptionsById")
    @WebMethod
    @ResponseWrapper(localName = "lookupCellAdvancedOptionsByIdResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.LookupCellAdvancedOptionsByIdResponse")
    public com.sdk.client.CellAdvancedDetailType lookupCellAdvancedOptionsById(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Attempts to asynchronously mail a cell. If the cell status is Mailing, Merging, or Merged, you cannot send the cell.
     * Does not require that the cell has been proofed.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "sendCellNow", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendCellNow")
    @WebMethod
    @ResponseWrapper(localName = "sendCellNowResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.SendCellNowResponse")
    public void sendCellNow(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Returns a list of events filtered by a specified date range. Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @WebResult(name = "eventList", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listRecipientHistory", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com", className = "com.sdk.client.ListRecipientHistory")
    @WebMethod
    @ResponseWrapper(localName = "listRecipientHistoryResponse", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com", className = "com.sdk.client.ListRecipientHistoryResponse")
    public com.sdk.client.EventListType listRecipientHistory(
        @WebParam(name = "recipientProfileKeys", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.SimplePropertyType> recipientProfileKeys,
        @WebParam(name = "filterEventDateStart", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterEventDateStart,
        @WebParam(name = "filterEventDateEnd", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterEventDateEnd
    );

    /**
     * Creates a clone of the specified cell and places the new cell in the specified mailing. Returns the new cell's ID.
     * Throws an exception if the cell being cloned is in Proofing or Mailing status, does not exist, or has been deleted.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "resultCellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "cloneCell", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.CloneCell")
    @WebMethod
    @ResponseWrapper(localName = "cloneCellResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.CloneCellResponse")
    public int cloneCell(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "mailingId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int mailingId
    );

    /**
     * Deletes a campaign. Throws an exception on failure (the 
     * campaign does not exist, was previously deleted, or has any 
     * mailings or cells that are in a state in which they cannot be 
     * deleted (actively mailing or proofing).
     * Introduced in e-Dialog Web Services 1.0.
     * 
     */
    @RequestWrapper(localName = "deleteCampaign", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.DeleteCampaign")
    @WebMethod
    @ResponseWrapper(localName = "deleteCampaignResponse", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.DeleteCampaignResponse")
    public void deleteCampaign(
        @WebParam(name = "campaignId", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        int campaignId
    );

    /**
     * Retrieves eReports data for a particular mailing
     * 				and a particular report
     * 				type.
     * 				Introduced in e-Dialog Web Services 1.3.
     * 			
     */
    @WebResult(name = "mailing", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
    @RequestWrapper(localName = "retrieveEReports", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrieveEReports")
    @WebMethod
    @ResponseWrapper(localName = "retrieveEReportsResponse", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RetrieveEReportsResponse")
    public com.sdk.client.MailingViewType retrieveEReports(
        @WebParam(name = "mailingId", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        int mailingId,
        @WebParam(name = "reportType", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.lang.String reportType
    );

    /**
     * Gets a list of defined master data column information from the data dictionary for a specific list.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "column", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listDataColumnsForAudience", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.ListDataColumnsForAudience")
    @WebMethod
    @ResponseWrapper(localName = "listDataColumnsForAudienceResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.ListDataColumnsForAudienceResponse")
    public java.util.List<com.sdk.client.DataColumnType> listDataColumnsForAudience(
        @WebParam(name = "audienceId", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        int audienceId
    );

    /**
     * Creates a class (group of data columns) by providing a list of data dictionary rows.
     * Calling this function with an empty column identifier list returns Class ID 95. To get a complete list 
     * of data columns from the data dictionary, use listAllDataColumns.
     * Introduced in e-Dialog Web Services 1.0.
     * 
     */
    @WebResult(name = "classId", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createAudienceClass", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateAudienceClass")
    @WebMethod
    @ResponseWrapper(localName = "createAudienceClassResponse", targetNamespace = "uri:dataupload.ws.sdk.edialog.com", className = "com.sdk.client.CreateAudienceClassResponse")
    public int createAudienceClass(
        @WebParam(name = "columnId", targetNamespace = "uri:dataupload.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> columnId
    );

    /**
     * Returns a list of mailings. Only a limited set of properties for each campaign are returned.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @RequestWrapper(localName = "listMailingsByFilter", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.ListMailingsByFilter")
    @WebMethod
    @ResponseWrapper(localName = "listMailingsByFilterResponse", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.ListMailingsByFilterResponse")
    public void listMailingsByFilter(
        @WebParam(name = "filterCampaignId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> filterCampaignId,
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterCreateDateStart", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateStart,
        @WebParam(name = "filterCreateDateEnd", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateEnd,
        @WebParam(name = "filterFirstMailedDateStart", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateStart,
        @WebParam(name = "filterFirstMailedDateEnd", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateEnd,
        @WebParam(name = "filterStatus", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.String> filterStatus,
        @WebParam(name = "filterUpdateDateStart", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateStart,
        @WebParam(name = "filterUpdateDateEnd", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateEnd,
        @WebParam(name = "filterUdf", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.UDFFilterType> filterUdf,
        @WebParam(name = "sortBy", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int pageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "currentPageNumber", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> currentPageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfRows", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfRows,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfPages", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfPages,
        @WebParam(mode = WebParam.Mode.OUT, name = "mailing", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.MailingOverviewType>> mailing
    );

    /**
     * Forces a refresh of eReports data for a mailing.
     * 				Introduced in e-Dialog Web Services 1.3.
     *         
     */
    @RequestWrapper(localName = "refreshEReports", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RefreshEReports")
    @WebMethod
    @ResponseWrapper(localName = "refreshEReportsResponse", targetNamespace = "uri:ereport.ws.sdk.edialog.com", className = "com.sdk.client.RefreshEReportsResponse")
    public void refreshEReports(
        @WebParam(name = "mailingId", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        int mailingId,
        @WebParam(name = "notificationEmails", targetNamespace = "uri:ereport.ws.sdk.edialog.com")
        java.util.List<java.lang.String> notificationEmails
    );

    /**
     * Returns a full set of cell properties.
     * Introduced in e-Dialog Web Services 1.0.
     * 
     */
    @WebResult(name = "cell", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupCellByAlternateKey", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.LookupCellByAlternateKey")
    @WebMethod
    @ResponseWrapper(localName = "lookupCellByAlternateKeyResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.LookupCellByAlternateKeyResponse")
    public com.sdk.client.CellDetailType lookupCellByAlternateKey(
        @WebParam(name = "alternateKey", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String alternateKey
    );

    /**
     * Returns a list of available metering schemes.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "meter", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listAvailableMeters", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListAvailableMeters")
    @WebMethod
    @ResponseWrapper(localName = "listAvailableMetersResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListAvailableMetersResponse")
    public java.util.List<java.lang.String> listAvailableMeters();

    /**
     * Returns the settings for the proof group specified, including whether to include in proofs,
     * include in the final e-mail, and send multipart samples as text.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "proofGroupOptions", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "getProofGroupOptions", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.GetProofGroupOptions")
    @WebMethod
    @ResponseWrapper(localName = "getProofGroupOptionsResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.GetProofGroupOptionsResponse")
    public com.sdk.client.ProofGroupOptionsType getProofGroupOptions(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "groupNumber", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int groupNumber
    );

    /**
     * Creates a grid for use in content from XML. Each column of the grid represents a symbol. Each row contains string values to merge into the content. The first column of the grid contains key values used to determine the content to merge for each recipient.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @WebResult(name = "gridId", targetNamespace = "uri:grid.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createXmlGrid", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.CreateXmlGrid")
    @WebMethod
    @ResponseWrapper(localName = "createXmlGridResponse", targetNamespace = "uri:grid.ws.sdk.edialog.com", className = "com.sdk.client.CreateXmlGridResponse")
    public int createXmlGrid(
        @WebParam(name = "name", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "xmlData", targetNamespace = "uri:grid.ws.sdk.edialog.com")
        java.lang.String xmlData
    );

    /**
     * (Deprecated. Use the service listCellsByFilter)
     * Returns a list of cells filtered by the specified settings. 
     * Returns only a limited set of cell properties. Filter settings are optional.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "cellList", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listCells", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListCells")
    @WebMethod
    @ResponseWrapper(localName = "listCellsResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.ListCellsResponse")
    public com.sdk.client.CellListType listCells(
        @WebParam(name = "filterMailingId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> filterMailingId,
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterCreateDateStart", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateStart,
        @WebParam(name = "filterCreateDateEnd", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateEnd,
        @WebParam(name = "filterFirstMailedDateStart", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateStart,
        @WebParam(name = "filterFirstMailedDateEnd", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateEnd,
        @WebParam(name = "filterStatus", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.String> filterStatus,
        @WebParam(name = "sortBy", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int pageNumber
    );

    /**
     * Creates a copy of an audience list. This function does not copy membership data (users) into the new audience list.
     * Instead, it creates an audience list that is empty.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "resultAudienceId", targetNamespace = "uri:audience.ws.sdk.edialog.com")
    @RequestWrapper(localName = "cloneAudience", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.CloneAudience")
    @WebMethod
    @ResponseWrapper(localName = "cloneAudienceResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.CloneAudienceResponse")
    public int cloneAudience(
        @WebParam(name = "audienceId", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int audienceId
    );

    /**
     * Look up recipient profile data. Introduced in e-Dialog Web Services 1.2.
     *             
     */
    @WebResult(name = "masterInfo", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupRecipientProfile", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com", className = "com.sdk.client.LookupRecipientProfile")
    @WebMethod
    @ResponseWrapper(localName = "lookupRecipientProfileResponse", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com", className = "com.sdk.client.LookupRecipientProfileResponse")
    public com.sdk.client.LookupRecipientProfileType lookupRecipientProfile(
        @WebParam(name = "recipientProfileKeys", targetNamespace = "uri:customerStatus.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.SimplePropertyType> recipientProfileKeys
    );

    /**
     * Resume processing of a cell. A cell must be in the "Paused" state to be resumed.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @RequestWrapper(localName = "resumeCell", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ResumeCell")
    @WebMethod
    @ResponseWrapper(localName = "resumeCellResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ResumeCellResponse")
    public void resumeCell(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId
    );

    /**
     * Creates a new cell. Throws an exception if
     * an alternateKey was provided and a cell with that key
     * already exists or the domain name of the
     * fromAddress is not included in the set of
     * supported domain names and
     * does not pass a basic validation check.
     * Introduced in e-Dialog Web Services 1.0.
     * 
     */
    @WebResult(name = "resultCellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createCell", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.CreateCell")
    @WebMethod
    @ResponseWrapper(localName = "createCellResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.CreateCellResponse")
    public int createCell(
        @WebParam(name = "mailingId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int mailingId,
        @WebParam(name = "name", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "fromName", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String fromName,
        @WebParam(name = "fromAddress", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String fromAddress,
        @WebParam(name = "subject", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String subject,
        @WebParam(name = "udf", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf,
        @WebParam(name = "alternateKey", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String alternateKey
    );

    /**
     * Assigns the specified web analytics token to a cell. Introduced in e-Dialog Web Services 1.1.
     */
    @RequestWrapper(localName = "updateCellWebAnalytics", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellWebAnalytics")
    @WebMethod
    @ResponseWrapper(localName = "updateCellWebAnalyticsResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellWebAnalyticsResponse")
    public void updateCellWebAnalytics(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "tokenId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int tokenId,
        @WebParam(name = "queryString", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String queryString
    );

    /**
     * Build an Audience based on a pre-defined Insight-Builder query.
     * 				Introduced in e-Dialog Web Services 1.4.
     *         
     */
    @WebResult(name = "jobId", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
    @RequestWrapper(localName = "buildAudienceFromIBQuery", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com", className = "com.sdk.client.BuildAudienceFromIBQuery")
    @WebMethod
    @ResponseWrapper(localName = "buildAudienceFromIBQueryResponse", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com", className = "com.sdk.client.BuildAudienceFromIBQueryResponse")
    public int buildAudienceFromIBQuery(
        @WebParam(name = "queryId", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        int queryId,
        @WebParam(name = "sourceAudienceId", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        java.lang.Integer sourceAudienceId,
        @WebParam(name = "targetAudienceId", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        int targetAudienceId,
        @WebParam(name = "notificationAddresses", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        java.util.List<java.lang.String> notificationAddresses,
        @WebParam(name = "scheduleDate", targetNamespace = "uri:insightbuilder.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar scheduleDate
    );

    /**
     * Creates a new mailing. Throws an exception if the alternate key already exists in the database (not null).
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "resultMailingId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createMailing", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.CreateMailing")
    @WebMethod
    @ResponseWrapper(localName = "createMailingResponse", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.CreateMailingResponse")
    public int createMailing(
        @WebParam(name = "campaignId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int campaignId,
        @WebParam(name = "name", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "udf", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf,
        @WebParam(name = "alternateKey", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.lang.String alternateKey
    );

    /**
     * Lists the available audiences using the specified filter settings.
     * Does not list audiences that have a status of DELETED. The filter* arguments are optional arguments
     * used to filter the results. Dates in date ranges are inclusive.
     * Introduced in e-Dialog Web Services 1.3.
     *             
     */
    @WebResult(name = "audienceList", targetNamespace = "uri:audience.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listAudiencesByFilter", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.ListAudiencesByFilter")
    @WebMethod
    @ResponseWrapper(localName = "listAudiencesByFilterResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.ListAudiencesByFilterResponse")
    public com.sdk.client.AudienceListWithStatusType listAudiencesByFilter(
        @WebParam(name = "filterType", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String filterType,
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterStartCreateDate", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterStartCreateDate,
        @WebParam(name = "filterEndCreateDate", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterEndCreateDate,
        @WebParam(name = "filterStartUpdateDate", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterStartUpdateDate,
        @WebParam(name = "filterEndUpdateDate", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterEndUpdateDate,
        @WebParam(name = "sortBy", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:audience.ws.sdk.edialog.com")
        int pageNumber
    );

    /**
     * Lists all audience classes available in the master database.
     * An audience class binds an audience list to a specific set of member columns in the master database.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "class", targetNamespace = "uri:audience.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listAudienceClasses", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.ListAudienceClasses")
    @WebMethod
    @ResponseWrapper(localName = "listAudienceClassesResponse", targetNamespace = "uri:audience.ws.sdk.edialog.com", className = "com.sdk.client.ListAudienceClassesResponse")
    public java.util.List<com.sdk.client.AudienceClassType> listAudienceClasses();

    /**
     * Creates a new campaign.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "resultCampaignId", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
    @RequestWrapper(localName = "createCampaign", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.CreateCampaign")
    @WebMethod
    @ResponseWrapper(localName = "createCampaignResponse", targetNamespace = "uri:campaign.ws.sdk.edialog.com", className = "com.sdk.client.CreateCampaignResponse")
    public int createCampaign(
        @WebParam(name = "name", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "udf", targetNamespace = "uri:campaign.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf
    );

    /**
     * Returns the list of customer IDs that were used during the most
     * recent build sample operation.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @WebResult(name = "emailAddress", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listProofAudienceEmails", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ListProofAudienceEmails")
    @WebMethod
    @ResponseWrapper(localName = "listProofAudienceEmailsResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.ListProofAudienceEmailsResponse")
    public java.util.List<java.lang.String> listProofAudienceEmails(
        @WebParam(name = "audienceId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int audienceId
    );

    /**
     * Maps the specified symbol to a custom function that was configured
     * by your account team. See listMappingFunctionsForCell.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "mapSymbolToCustomFunction", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapSymbolToCustomFunction")
    @WebMethod
    @ResponseWrapper(localName = "mapSymbolToCustomFunctionResponse", targetNamespace = "uri:cp.ws.sdk.edialog.com", className = "com.sdk.client.MapSymbolToCustomFunctionResponse")
    public void mapSymbolToCustomFunction(
        @WebParam(name = "cellId", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "symbolName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String symbolName,
        @WebParam(name = "functionName", targetNamespace = "uri:cp.ws.sdk.edialog.com")
        java.lang.String functionName
    );

    /**
     * Updates a cell's main properties. Throws an exception if the domain
     * name of the fromAddress is not included in the set of supported
     * domain names and does not pass a basic validation check.
     * Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @RequestWrapper(localName = "updateCell", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCell")
    @WebMethod
    @ResponseWrapper(localName = "updateCellResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.UpdateCellResponse")
    public void updateCell(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "name", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String name,
        @WebParam(name = "description", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String description,
        @WebParam(name = "fromName", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String fromName,
        @WebParam(name = "fromAddress", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String fromAddress,
        @WebParam(name = "subject", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.lang.String subject,
        @WebParam(name = "udf", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        java.util.List<java.lang.String> udf
    );

    /**
     * Sets the options  for the proof group specified, including whether to include in proofs,
     * include in the final e-mail, and send multipart samples as text.
     * Introduced in e-Dialog Web Services 1.1.
     *             
     */
    @RequestWrapper(localName = "updateProofGroupOptions", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.UpdateProofGroupOptions")
    @WebMethod
    @ResponseWrapper(localName = "updateProofGroupOptionsResponse", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com", className = "com.sdk.client.UpdateProofGroupOptionsResponse")
    public void updateProofGroupOptions(
        @WebParam(name = "cellId", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int cellId,
        @WebParam(name = "groupNumber", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        int groupNumber,
        @WebParam(name = "includeInProofs", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        java.lang.Boolean includeInProofs,
        @WebParam(name = "includeFinalEmail", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        java.lang.Boolean includeFinalEmail,
        @WebParam(name = "sendMultipartText", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        java.lang.Boolean sendMultipartText,
        @WebParam(name = "emailAddress", targetNamespace = "uri:mailingcontrol.ws.sdk.edialog.com")
        java.util.List<java.lang.String> emailAddress
    );

    /**
     * Returns a list of mailings. Only a limited set of properties for each
     * 				campaign are returned.
     * 				Allows filtering by specific mailing type.
     *         
     */
    @RequestWrapper(localName = "listMailingsByFilterAndMailingType", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.ListMailingsByFilterAndMailingType")
    @WebMethod
    @ResponseWrapper(localName = "listMailingsByFilterAndMailingTypeResponse", targetNamespace = "uri:mailing.ws.sdk.edialog.com", className = "com.sdk.client.ListMailingsByFilterAndMailingTypeResponse")
    public void listMailingsByFilterAndMailingType(
        @WebParam(name = "filterCampaignId", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.Integer> filterCampaignId,
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterCreateDateStart", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateStart,
        @WebParam(name = "filterCreateDateEnd", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateEnd,
        @WebParam(name = "filterFirstMailedDateStart", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateStart,
        @WebParam(name = "filterFirstMailedDateEnd", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterFirstMailedDateEnd,
        @WebParam(name = "filterStatus", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.String> filterStatus,
        @WebParam(name = "filterUpdateDateStart", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateStart,
        @WebParam(name = "filterUpdateDateEnd", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterUpdateDateEnd,
        @WebParam(name = "filterUdf", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<com.sdk.client.UDFFilterType> filterUdf,
        @WebParam(name = "sortBy", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        int pageNumber,
        @WebParam(name = "mailingType", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        java.util.List<java.lang.String> mailingType,
        @WebParam(mode = WebParam.Mode.OUT, name = "currentPageNumber", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> currentPageNumber,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfRows", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfRows,
        @WebParam(mode = WebParam.Mode.OUT, name = "totalNumberOfPages", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.lang.Integer> totalNumberOfPages,
        @WebParam(mode = WebParam.Mode.OUT, name = "mailing", targetNamespace = "uri:mailing.ws.sdk.edialog.com")
        javax.xml.ws.Holder<java.util.List<com.sdk.client.MailingOverviewType>> mailing
    );

    /**
     * Returns a list of content objects. Only a limited set of properties is returned. Introduced in e-Dialog Web Services 1.0.
     *             
     */
    @WebResult(name = "contentList", targetNamespace = "uri:content.ws.sdk.edialog.com")
    @RequestWrapper(localName = "listContent", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.ListContent")
    @WebMethod
    @ResponseWrapper(localName = "listContentResponse", targetNamespace = "uri:content.ws.sdk.edialog.com", className = "com.sdk.client.ListContentResponse")
    public com.sdk.client.ContentListType listContent(
        @WebParam(name = "filterNameExpression", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.lang.String filterNameExpression,
        @WebParam(name = "filterCreateDateStart", targetNamespace = "uri:content.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateStart,
        @WebParam(name = "filterCreateDateEnd", targetNamespace = "uri:content.ws.sdk.edialog.com")
        javax.xml.datatype.XMLGregorianCalendar filterCreateDateEnd,
        @WebParam(name = "sortBy", targetNamespace = "uri:content.ws.sdk.edialog.com")
        java.util.List<java.lang.String> sortBy,
        @WebParam(name = "pageSize", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int pageSize,
        @WebParam(name = "pageNumber", targetNamespace = "uri:content.ws.sdk.edialog.com")
        int pageNumber
    );

    /**
     * Returns a full set of cell properties.
     * Introduced in e-Dialog Web Services 1.0.
     * 
     */
    @WebResult(name = "cell", targetNamespace = "uri:cell.ws.sdk.edialog.com")
    @RequestWrapper(localName = "lookupCellById", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.LookupCellById")
    @WebMethod
    @ResponseWrapper(localName = "lookupCellByIdResponse", targetNamespace = "uri:cell.ws.sdk.edialog.com", className = "com.sdk.client.LookupCellByIdResponse")
    public com.sdk.client.CellDetailType lookupCellById(
        @WebParam(name = "cellId", targetNamespace = "uri:cell.ws.sdk.edialog.com")
        int cellId
    );
}
